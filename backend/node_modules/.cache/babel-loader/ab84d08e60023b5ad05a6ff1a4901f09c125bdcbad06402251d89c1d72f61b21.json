{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import './notifications.css';\n// import { Link, useLocation } from 'react-router-dom';\n// import axios from 'axios';\n\n// const Notifications = () => {\n//     const [notifications, setNotifications] = useState([]);\n//     const [pendingNotifications, setPendingNotifications] = useState([]);\n//     const [acceptedNotifications, setAcceptedNotifications] = useState([]);\n//     const [rejectedNotifications, setRejectedNotifications] = useState([]);\n//     const [clickedButtons, setClickedButtons] = useState({});\n\n//     const location = useLocation();\n//     const { data } = location.state || {};\n\n//     const fetchNotifications = async () => {\n//         try {\n//             if (data) {\n//                 const response = await axios.get(`http://localhost:5000/getNotifications/${data}`);\n//                 setNotifications(response.data);\n//             }\n//         } catch (error) {\n//             console.error('Error fetching notifications:', error);\n//         }\n//     };\n\n//     useEffect(() => {\n//         if (data) {\n//             fetchNotifications();\n//         }\n//     }, [data]);\n\n//     // Categorize notifications based on status\n//     useEffect(() => {\n//         const pending = notifications.filter(notification => notification.status === 'pending');\n//         const accepted = notifications.filter(notification => notification.status === 'accepted');\n//         const rejected = notifications.filter(notification => notification.status === 'rejected');\n\n//         setPendingNotifications(pending);\n//         setAcceptedNotifications(accepted);\n//         setRejectedNotifications(rejected);\n//     }, [notifications]);\n\n//     const handleAccept = async (notification) => {\n//         try {\n//             await axios.post('http://localhost:5000/acceptBooking', {\n//                 bookingId: notification._id,\n//                 userEmail: notification.userEmail // Send the userEmail to the backend\n//             });\n//             console.log('Booking accepted');\n//             setClickedButtons((prevState) => ({\n//                 ...prevState,\n//                 [notification._id]: 'accepted',\n//             }));\n//             fetchNotifications(); // Refresh notifications\n//         } catch (error) {\n//             console.error('Error accepting booking:', error);\n//         }\n//     };\n\n//     const handleReject = async (notification) => {\n//         try {\n//             await axios.post('http://localhost:5000/rejectBooking', {\n//                 bookingId: notification._id,\n//                 userEmail: notification.userEmail // Send the userEmail to the backend\n//             });\n//             console.log('Booking rejected');\n//             setClickedButtons((prevState) => ({\n//                 ...prevState,\n//                 [notification._id]: 'rejected',\n//             }));\n//             fetchNotifications(); // Refresh notifications\n//         } catch (error) {\n//             console.error('Error rejecting booking:', error);\n//         }\n//     };\n\n//     return (\n//         <>\n//             <nav className=\"navbar\">\n//                 <div className=\"logo\">\n//                     <h1 style={{ fontFamily: \"Courier New', Courier, monospace\", fontSize: '27px' }}>\n//                         SkillBridge\n//                     </h1>\n//                 </div>\n//                 <div className=\"nav-right\">\n//                     <ul className=\"nav-links\">\n//                         <li><Link to=\"/Home\">Home</Link></li>\n//                         <li><Link to=\"/videos\">Videos</Link></li>\n//                         <li><Link to=\"/myworks\">My works</Link></li>\n//                         <li><Link to=\"/notifications\">Notifications</Link></li>\n//                     </ul>\n//                     <div className=\"profile\">\n//                         <img\n//                             src=\"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png\"\n//                             alt=\"Profile\"\n//                             className=\"profile-img\"\n//                         />\n//                     </div>\n//                 </div>\n//             </nav>\n\n//             <div className=\"Notifications-container\">\n//                 {/* Pending Notifications */}\n//                 <h2>Pending Notifications</h2>\n//                 <ul>\n//                     {pendingNotifications.length > 0 ? (\n//                         pendingNotifications.map((notification) => (\n//                             <li key={notification._id} className=\"notification-item\">\n//                                 <p><strong>Hand Type:</strong> {notification.handType}</p>\n//                                 <p><strong>Number of Hands:</strong> {notification.numberOfHands}</p>\n//                                 <p><strong>Address:</strong> {notification.address}</p>\n//                                 <p><strong>Start Time:</strong> {new Date(notification.startTime).toLocaleString()}</p>\n//                                 <p><strong>End Time:</strong> {new Date(notification.endTime).toLocaleString()}</p>\n//                                 <p><strong>Total Price:</strong> ${notification.totalPrice}</p>\n//                                 <div className=\"notification-buttons\">\n//                                     <button\n//                                         className=\"accept-button\"\n//                                         onClick={() => handleAccept(notification)}\n//                                         disabled={clickedButtons[notification._id] === 'accepted'}\n//                                     >\n//                                         Accept\n//                                     </button>\n//                                     <button\n//                                         className=\"reject-button\"\n//                                         onClick={() => handleReject(notification)}\n//                                         disabled={clickedButtons[notification._id] === 'rejected'}\n//                                     >\n//                                         Reject\n//                                     </button>\n//                                 </div>\n//                             </li>\n//                         ))\n//                     ) : (\n//                         <p>No pending notifications</p>\n//                     )}\n//                 </ul>\n\n//                 {/* Accepted Notifications */}\n//                 <h2>Accepted Notifications</h2>\n//                 <ul>\n//                     {acceptedNotifications.length > 0 ? (\n//                         acceptedNotifications.map((notification) => (\n//                             <li key={notification._id} className=\"notification-item\">\n//                                 <p><strong>Hand Type:</strong> {notification.handType}</p>\n//                                 <p><strong>Number of Hands:</strong> {notification.numberOfHands}</p>\n//                                 <p><strong>Address:</strong> {notification.address}</p>\n//                                 <p><strong>Start Time:</strong> {new Date(notification.startTime).toLocaleString()}</p>\n//                                 <p><strong>End Time:</strong> {new Date(notification.endTime).toLocaleString()}</p>\n//                                 <p><strong>Total Price:</strong> ${notification.totalPrice}</p>\n//                                 <p>Status: Accepted</p>\n//                             </li>\n//                         ))\n//                     ) : (\n//                         <p>No accepted notifications</p>\n//                     )}\n//                 </ul>\n\n//                 {/* Rejected Notifications */}\n//                 <h2>Rejected Notifications</h2>\n//                 <ul>\n//                     {rejectedNotifications.length > 0 ? (\n//                         rejectedNotifications.map((notification) => (\n//                             <li key={notification._id} className=\"notification-item\">\n//                                 <p><strong>Hand Type:</strong> {notification.handType}</p>\n//                                 <p><strong>Number of Hands:</strong> {notification.numberOfHands}</p>\n//                                 <p><strong>Address:</strong> {notification.address}</p>\n//                                 <p><strong>Start Time:</strong> {new Date(notification.startTime).toLocaleString()}</p>\n//                                 <p><strong>End Time:</strong> {new Date(notification.endTime).toLocaleString()}</p>\n//                                 <p><strong>Total Price:</strong> ${notification.totalPrice}</p>\n//                                 <p>Status: Rejected</p>\n//                             </li>\n//                         ))\n//                     ) : (\n//                         <p>No rejected notifications</p>\n//                     )}\n//                 </ul>\n//             </div>\n//         </>\n//     );\n// };\n\n// export default Notifications;","map":{"version":3,"names":[],"sources":["D:/TechTalentConnect/frontend/src/components/notifications/notifications.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import './notifications.css';\r\n// import { Link, useLocation } from 'react-router-dom';\r\n// import axios from 'axios';\r\n\r\n// const Notifications = () => {\r\n//     const [notifications, setNotifications] = useState([]);\r\n//     const [pendingNotifications, setPendingNotifications] = useState([]);\r\n//     const [acceptedNotifications, setAcceptedNotifications] = useState([]);\r\n//     const [rejectedNotifications, setRejectedNotifications] = useState([]);\r\n//     const [clickedButtons, setClickedButtons] = useState({});\r\n\r\n//     const location = useLocation();\r\n//     const { data } = location.state || {};\r\n\r\n//     const fetchNotifications = async () => {\r\n//         try {\r\n//             if (data) {\r\n//                 const response = await axios.get(`http://localhost:5000/getNotifications/${data}`);\r\n//                 setNotifications(response.data);\r\n//             }\r\n//         } catch (error) {\r\n//             console.error('Error fetching notifications:', error);\r\n//         }\r\n//     };\r\n\r\n//     useEffect(() => {\r\n//         if (data) {\r\n//             fetchNotifications();\r\n//         }\r\n//     }, [data]);\r\n\r\n//     // Categorize notifications based on status\r\n//     useEffect(() => {\r\n//         const pending = notifications.filter(notification => notification.status === 'pending');\r\n//         const accepted = notifications.filter(notification => notification.status === 'accepted');\r\n//         const rejected = notifications.filter(notification => notification.status === 'rejected');\r\n\r\n//         setPendingNotifications(pending);\r\n//         setAcceptedNotifications(accepted);\r\n//         setRejectedNotifications(rejected);\r\n//     }, [notifications]);\r\n\r\n//     const handleAccept = async (notification) => {\r\n//         try {\r\n//             await axios.post('http://localhost:5000/acceptBooking', {\r\n//                 bookingId: notification._id,\r\n//                 userEmail: notification.userEmail // Send the userEmail to the backend\r\n//             });\r\n//             console.log('Booking accepted');\r\n//             setClickedButtons((prevState) => ({\r\n//                 ...prevState,\r\n//                 [notification._id]: 'accepted',\r\n//             }));\r\n//             fetchNotifications(); // Refresh notifications\r\n//         } catch (error) {\r\n//             console.error('Error accepting booking:', error);\r\n//         }\r\n//     };\r\n\r\n//     const handleReject = async (notification) => {\r\n//         try {\r\n//             await axios.post('http://localhost:5000/rejectBooking', {\r\n//                 bookingId: notification._id,\r\n//                 userEmail: notification.userEmail // Send the userEmail to the backend\r\n//             });\r\n//             console.log('Booking rejected');\r\n//             setClickedButtons((prevState) => ({\r\n//                 ...prevState,\r\n//                 [notification._id]: 'rejected',\r\n//             }));\r\n//             fetchNotifications(); // Refresh notifications\r\n//         } catch (error) {\r\n//             console.error('Error rejecting booking:', error);\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <>\r\n//             <nav className=\"navbar\">\r\n//                 <div className=\"logo\">\r\n//                     <h1 style={{ fontFamily: \"Courier New', Courier, monospace\", fontSize: '27px' }}>\r\n//                         SkillBridge\r\n//                     </h1>\r\n//                 </div>\r\n//                 <div className=\"nav-right\">\r\n//                     <ul className=\"nav-links\">\r\n//                         <li><Link to=\"/Home\">Home</Link></li>\r\n//                         <li><Link to=\"/videos\">Videos</Link></li>\r\n//                         <li><Link to=\"/myworks\">My works</Link></li>\r\n//                         <li><Link to=\"/notifications\">Notifications</Link></li>\r\n//                     </ul>\r\n//                     <div className=\"profile\">\r\n//                         <img\r\n//                             src=\"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png\"\r\n//                             alt=\"Profile\"\r\n//                             className=\"profile-img\"\r\n//                         />\r\n//                     </div>\r\n//                 </div>\r\n//             </nav>\r\n\r\n//             <div className=\"Notifications-container\">\r\n//                 {/* Pending Notifications */}\r\n//                 <h2>Pending Notifications</h2>\r\n//                 <ul>\r\n//                     {pendingNotifications.length > 0 ? (\r\n//                         pendingNotifications.map((notification) => (\r\n//                             <li key={notification._id} className=\"notification-item\">\r\n//                                 <p><strong>Hand Type:</strong> {notification.handType}</p>\r\n//                                 <p><strong>Number of Hands:</strong> {notification.numberOfHands}</p>\r\n//                                 <p><strong>Address:</strong> {notification.address}</p>\r\n//                                 <p><strong>Start Time:</strong> {new Date(notification.startTime).toLocaleString()}</p>\r\n//                                 <p><strong>End Time:</strong> {new Date(notification.endTime).toLocaleString()}</p>\r\n//                                 <p><strong>Total Price:</strong> ${notification.totalPrice}</p>\r\n//                                 <div className=\"notification-buttons\">\r\n//                                     <button\r\n//                                         className=\"accept-button\"\r\n//                                         onClick={() => handleAccept(notification)}\r\n//                                         disabled={clickedButtons[notification._id] === 'accepted'}\r\n//                                     >\r\n//                                         Accept\r\n//                                     </button>\r\n//                                     <button\r\n//                                         className=\"reject-button\"\r\n//                                         onClick={() => handleReject(notification)}\r\n//                                         disabled={clickedButtons[notification._id] === 'rejected'}\r\n//                                     >\r\n//                                         Reject\r\n//                                     </button>\r\n//                                 </div>\r\n//                             </li>\r\n//                         ))\r\n//                     ) : (\r\n//                         <p>No pending notifications</p>\r\n//                     )}\r\n//                 </ul>\r\n\r\n//                 {/* Accepted Notifications */}\r\n//                 <h2>Accepted Notifications</h2>\r\n//                 <ul>\r\n//                     {acceptedNotifications.length > 0 ? (\r\n//                         acceptedNotifications.map((notification) => (\r\n//                             <li key={notification._id} className=\"notification-item\">\r\n//                                 <p><strong>Hand Type:</strong> {notification.handType}</p>\r\n//                                 <p><strong>Number of Hands:</strong> {notification.numberOfHands}</p>\r\n//                                 <p><strong>Address:</strong> {notification.address}</p>\r\n//                                 <p><strong>Start Time:</strong> {new Date(notification.startTime).toLocaleString()}</p>\r\n//                                 <p><strong>End Time:</strong> {new Date(notification.endTime).toLocaleString()}</p>\r\n//                                 <p><strong>Total Price:</strong> ${notification.totalPrice}</p>\r\n//                                 <p>Status: Accepted</p>\r\n//                             </li>\r\n//                         ))\r\n//                     ) : (\r\n//                         <p>No accepted notifications</p>\r\n//                     )}\r\n//                 </ul>\r\n\r\n//                 {/* Rejected Notifications */}\r\n//                 <h2>Rejected Notifications</h2>\r\n//                 <ul>\r\n//                     {rejectedNotifications.length > 0 ? (\r\n//                         rejectedNotifications.map((notification) => (\r\n//                             <li key={notification._id} className=\"notification-item\">\r\n//                                 <p><strong>Hand Type:</strong> {notification.handType}</p>\r\n//                                 <p><strong>Number of Hands:</strong> {notification.numberOfHands}</p>\r\n//                                 <p><strong>Address:</strong> {notification.address}</p>\r\n//                                 <p><strong>Start Time:</strong> {new Date(notification.startTime).toLocaleString()}</p>\r\n//                                 <p><strong>End Time:</strong> {new Date(notification.endTime).toLocaleString()}</p>\r\n//                                 <p><strong>Total Price:</strong> ${notification.totalPrice}</p>\r\n//                                 <p>Status: Rejected</p>\r\n//                             </li>\r\n//                         ))\r\n//                     ) : (\r\n//                         <p>No rejected notifications</p>\r\n//                     )}\r\n//                 </ul>\r\n//             </div>\r\n//         </>\r\n//     );\r\n// };\r\n\r\n// export default Notifications;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}