{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import './Mbook.css';\n// import { useLocation } from 'react-router-dom';\n// import axios from 'axios';\n\n// const Mbook = () => {\n//   const location = useLocation();\n//   const { serviceName, artistName, demoImages, email } = location.state || {}; // Get email from location.state\n//   const [message, setMessage] = useState('');\n//   const [handType, setHandType] = useState('half');\n//   const [numberOfHands, setNumberOfHands] = useState(1);\n//   const [totalPrice, setTotalPrice] = useState(0);\n//   const [address, setAddress] = useState('');\n//   const [startTime, setStartTime] = useState('');\n//   const [endTime, setEndTime] = useState('');\n//   const [userEmail, setUserEmail] = useState('');\n//   const [profData, setProfData] = useState(null); // State to store profReg data\n//   const [profEmail, setProfEmail] = useState(email || ''); // Correctly set profEmail\n\n//   console.log(profEmail);  // This will now correctly log profEmail in the console\n\n//   useEffect(() => {\n//     console.log('Email passed to Mbook:', email);\n//     // Fetch professional details based on the email\n//     const fetchProfData = async () => {\n//       try {\n//         const response = await axios.get(`http://localhost:5000/profReg/${email}`);\n//         setProfData(response.data);\n//       } catch (error) {\n//         console.error('Error fetching professional data:', error);\n//       }\n//     };\n\n//     if (email) {\n//       fetchProfData();\n//     }\n//   }, [email]);\n\n//   const calculateTotal = () => {\n//     const price = handType === 'half' ? 500 : 1000;\n//     setTotalPrice(price * numberOfHands);\n//   };\n\n//   const handleBooking = async () => {\n//     if (!address || !startTime || !endTime || !userEmail) {\n//       alert('Please fill out all required fields.');\n//       return;\n//     }\n\n//     const formData = {\n//       handType,\n//       numberOfHands,\n//       address,\n//       startTime,\n//       endTime,\n//       userEmail,\n//       totalPrice,\n//       profEmail\n//     };\n//     console.log(formData);\n\n//     try {\n//       const response = await axios.post('http://localhost:5000/book', formData, {\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//       });\n//       setMessage('Registration successful');\n//       setTimeout(() => {\n//         setMessage('');\n//         // setHandType('')\n//         // setNumberOfHands('')\n//         // setAddress('')\n//         // setHandType('')\n//         // setStartTime('')\n//         // setEndTime('')\n//         // setUserEmail('')\n//       }, 2000);\n//     } catch (error) {\n//       alert('Error sending booking request');\n//     }\n//   };\n\n//   return (\n//     <div className=\"mbook-container\">\n//       <h1>Book {serviceName}\n//         <br />\n//       </h1>\n//       <div><p>Service By  {artistName}<br />\n//         Email: {email}</p>\n//       </div>\n\n//       <div className=\"mehndi-image\">\n//         {demoImages && demoImages.length > 0 ? (\n//           demoImages.map((image, index) => (\n//             <img\n//               key={index}\n//               src={`http://localhost:5000/uploads/${image}`}\n//               alt={`Artist work ${index}`}\n//               style={{ width: '200px', margin: '10px' }}\n//             />\n//           ))\n//         ) : (\n//           <p>No images available</p>\n//         )}\n//       </div>\n\n//       <div className=\"form-container\">\n//         {message && <h2 className='msg'>{message}</h2>}\n\n//         <form>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"handType\">Select Hand Type:</label>\n//             <select id=\"handType\" value={handType} onChange={(e) => setHandType(e.target.value)}>\n//               <option value=\"half\" data-price=\"500\">Half Hand</option>\n//               <option value=\"full\" data-price=\"1000\">Full Hand</option>\n//             </select>\n//           </div>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"numberOfHands\">Number of Hands:</label>\n//             <input\n//               type=\"number\"\n//               id=\"numberOfHands\"\n//               min=\"1\"\n//               value={numberOfHands}\n//               onChange={(e) => setNumberOfHands(e.target.value)}\n//             />\n//           </div>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"address\">Enter Address:</label>\n//             <input\n//               type=\"text\"\n//               id=\"address\"\n//               value={address}\n//               onChange={(e) => setAddress(e.target.value)}\n//               placeholder=\"Enter your address\"\n//               required\n//             />\n//           </div>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"startTime\">Start Date & Time:</label>\n//             <input\n//               type=\"datetime-local\"\n//               id=\"startTime\"\n//               value={startTime}\n//               onChange={(e) => setStartTime(e.target.value)}\n//               required\n//             />\n//           </div>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"endTime\">End Date & Time:</label>\n//             <input\n//               type=\"datetime-local\"\n//               id=\"endTime\"\n//               value={endTime}\n//               onChange={(e) => setEndTime(e.target.value)}\n//               required\n//             />\n//           </div>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"userEmail\">Your Email:</label>\n//             <input\n//               type=\"email\"\n//               id=\"userEmail\"\n//               value={userEmail}\n//               onChange={(e) => setUserEmail(e.target.value)}\n//               placeholder=\"Enter your email\"\n//               required\n//             />\n//           </div>\n//           <button className=\"btncal\" type=\"button\" onClick={calculateTotal}>Calculate Total Price</button>\n//           <button className=\"btncal\" type=\"button\" onClick={handleBooking}>Book Now</button>\n//         </form>\n//         <div className=\"total-price\" onChange={(e) => setTotalPrice(e.target.value)}>Total Price: â‚¹{totalPrice}</div>\n\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Mbook;","map":{"version":3,"names":[],"sources":["D:/TechTalentConnect/frontend/src/components/Mbook/Mbook.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import './Mbook.css';\r\n// import { useLocation } from 'react-router-dom';\r\n// import axios from 'axios';\r\n\r\n// const Mbook = () => {\r\n//   const location = useLocation();\r\n//   const { serviceName, artistName, demoImages, email } = location.state || {}; // Get email from location.state\r\n//   const [message, setMessage] = useState('');\r\n//   const [handType, setHandType] = useState('half');\r\n//   const [numberOfHands, setNumberOfHands] = useState(1);\r\n//   const [totalPrice, setTotalPrice] = useState(0);\r\n//   const [address, setAddress] = useState('');\r\n//   const [startTime, setStartTime] = useState('');\r\n//   const [endTime, setEndTime] = useState('');\r\n//   const [userEmail, setUserEmail] = useState('');\r\n//   const [profData, setProfData] = useState(null); // State to store profReg data\r\n//   const [profEmail, setProfEmail] = useState(email || ''); // Correctly set profEmail\r\n\r\n//   console.log(profEmail);  // This will now correctly log profEmail in the console\r\n\r\n//   useEffect(() => {\r\n//     console.log('Email passed to Mbook:', email);\r\n//     // Fetch professional details based on the email\r\n//     const fetchProfData = async () => {\r\n//       try {\r\n//         const response = await axios.get(`http://localhost:5000/profReg/${email}`);\r\n//         setProfData(response.data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching professional data:', error);\r\n//       }\r\n//     };\r\n\r\n//     if (email) {\r\n//       fetchProfData();\r\n//     }\r\n//   }, [email]);\r\n\r\n//   const calculateTotal = () => {\r\n//     const price = handType === 'half' ? 500 : 1000;\r\n//     setTotalPrice(price * numberOfHands);\r\n//   };\r\n\r\n//   const handleBooking = async () => {\r\n//     if (!address || !startTime || !endTime || !userEmail) {\r\n//       alert('Please fill out all required fields.');\r\n//       return;\r\n//     }\r\n\r\n//     const formData = {\r\n//       handType,\r\n//       numberOfHands,\r\n//       address,\r\n//       startTime,\r\n//       endTime,\r\n//       userEmail,\r\n//       totalPrice,\r\n//       profEmail\r\n//     };\r\n//     console.log(formData);\r\n\r\n//     try {\r\n//       const response = await axios.post('http://localhost:5000/book', formData, {\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//       });\r\n//       setMessage('Registration successful');\r\n//       setTimeout(() => {\r\n//         setMessage('');\r\n//         // setHandType('')\r\n//         // setNumberOfHands('')\r\n//         // setAddress('')\r\n//         // setHandType('')\r\n//         // setStartTime('')\r\n//         // setEndTime('')\r\n//         // setUserEmail('')\r\n//       }, 2000);\r\n//     } catch (error) {\r\n//       alert('Error sending booking request');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"mbook-container\">\r\n//       <h1>Book {serviceName}\r\n//         <br />\r\n//       </h1>\r\n//       <div><p>Service By  {artistName}<br />\r\n//         Email: {email}</p>\r\n//       </div>\r\n\r\n//       <div className=\"mehndi-image\">\r\n//         {demoImages && demoImages.length > 0 ? (\r\n//           demoImages.map((image, index) => (\r\n//             <img\r\n//               key={index}\r\n//               src={`http://localhost:5000/uploads/${image}`}\r\n//               alt={`Artist work ${index}`}\r\n//               style={{ width: '200px', margin: '10px' }}\r\n//             />\r\n//           ))\r\n//         ) : (\r\n//           <p>No images available</p>\r\n//         )}\r\n//       </div>\r\n\r\n//       <div className=\"form-container\">\r\n//         {message && <h2 className='msg'>{message}</h2>}\r\n\r\n//         <form>\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"handType\">Select Hand Type:</label>\r\n//             <select id=\"handType\" value={handType} onChange={(e) => setHandType(e.target.value)}>\r\n//               <option value=\"half\" data-price=\"500\">Half Hand</option>\r\n//               <option value=\"full\" data-price=\"1000\">Full Hand</option>\r\n//             </select>\r\n//           </div>\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"numberOfHands\">Number of Hands:</label>\r\n//             <input\r\n//               type=\"number\"\r\n//               id=\"numberOfHands\"\r\n//               min=\"1\"\r\n//               value={numberOfHands}\r\n//               onChange={(e) => setNumberOfHands(e.target.value)}\r\n//             />\r\n//           </div>\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"address\">Enter Address:</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               id=\"address\"\r\n//               value={address}\r\n//               onChange={(e) => setAddress(e.target.value)}\r\n//               placeholder=\"Enter your address\"\r\n//               required\r\n//             />\r\n//           </div>\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"startTime\">Start Date & Time:</label>\r\n//             <input\r\n//               type=\"datetime-local\"\r\n//               id=\"startTime\"\r\n//               value={startTime}\r\n//               onChange={(e) => setStartTime(e.target.value)}\r\n//               required\r\n//             />\r\n//           </div>\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"endTime\">End Date & Time:</label>\r\n//             <input\r\n//               type=\"datetime-local\"\r\n//               id=\"endTime\"\r\n//               value={endTime}\r\n//               onChange={(e) => setEndTime(e.target.value)}\r\n//               required\r\n//             />\r\n//           </div>\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"userEmail\">Your Email:</label>\r\n//             <input\r\n//               type=\"email\"\r\n//               id=\"userEmail\"\r\n//               value={userEmail}\r\n//               onChange={(e) => setUserEmail(e.target.value)}\r\n//               placeholder=\"Enter your email\"\r\n//               required\r\n//             />\r\n//           </div>\r\n//           <button className=\"btncal\" type=\"button\" onClick={calculateTotal}>Calculate Total Price</button>\r\n//           <button className=\"btncal\" type=\"button\" onClick={handleBooking}>Book Now</button>\r\n//         </form>\r\n//         <div className=\"total-price\" onChange={(e) => setTotalPrice(e.target.value)}>Total Price: â‚¹{totalPrice}</div>\r\n\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Mbook;\r\n\r\n\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}