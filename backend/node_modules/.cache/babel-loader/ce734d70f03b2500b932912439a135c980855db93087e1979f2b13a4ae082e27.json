{"ast":null,"code":"var _jsxFileName = \"D:\\\\TechTalentConnect\\\\frontend\\\\src\\\\components\\\\AShorts\\\\AShorts.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { faThumbsUp, faThumbsDown, faComment, faUserCircle, faPaperPlane } from '@fortawesome/free-solid-svg-icons';\n// import { Link, useLocation } from 'react-router-dom';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faBell } from '@fortawesome/free-solid-svg-icons';\n// import './AShorts.css';\n\n// const AShorts = () => {\n//     const [videoData, setVideoData] = useState([]);\n//     const [reactions, setReactions] = useState([]);\n//     const [descriptionVisible, setDescriptionVisible] = useState([]);\n//     const [commentVisible, setCommentVisible] = useState([]);\n//     const [comments, setComments] = useState({});\n//     const [isNavActive, setIsNavActive] = useState(false);\n//     const location = useLocation();\n//     const { data } = location.state || {};\n//     useEffect(() => {\n//         const fetchVideoData = () => {\n//             const videos = ['video1.mp4', 'video2.mp4']; // Replace with your video data\n//             setVideoData(videos);\n//             setReactions(videos.map(() => ({ liked: false, disliked: false })));\n//             setDescriptionVisible(videos.map(() => false));\n//             setCommentVisible(videos.map(() => false));\n\n//             const storedComments = {};\n//             videos.forEach(video => {\n//                 const videoComments = JSON.parse(localStorage.getItem(`comments-${video}`)) || [];\n//                 storedComments[video] = videoComments;\n//             });\n//             setComments(storedComments);\n//         };\n\n//         fetchVideoData();\n//     }, []);\n\n//     const handleReaction = (index, reactionType) => {\n//         setReactions((prevReactions) => {\n//             const newReactions = [...prevReactions];\n//             if (!newReactions[index][reactionType]) {\n//                 newReactions[index][reactionType] = true;\n//                 newReactions[index][reactionType === 'liked' ? 'disliked' : 'liked'] = false;\n//             }\n//             return newReactions;\n//         });\n//     };\n\n//     const toggleDescription = (index) => {\n//         setDescriptionVisible((prevVisibility) => {\n//             const newVisibility = [...prevVisibility];\n//             newVisibility[index] = !newVisibility[index];\n//             return newVisibility;\n//         });\n//     };\n\n//     const toggleComment = (index) => {\n//         setCommentVisible((prevVisibility) => {\n//             const newVisibility = [...prevVisibility];\n//             newVisibility[index] = !newVisibility[index];\n//             return newVisibility;\n//         });\n//     };\n\n//     const handleCommentSubmit = (index, videoId) => {\n//         const commentInput = document.querySelector(`#comment-input-${index}`);\n//         const commentText = commentInput.value;\n\n//         if (commentText.trim()) {\n//             const newComments = { ...comments };\n//             if (!newComments[videoId]) {\n//                 newComments[videoId] = [];\n//             }\n//             newComments[videoId].push(commentText);\n\n//             localStorage.setItem(`comments-${videoId}`, JSON.stringify(newComments[videoId]));\n\n//             setComments(newComments);\n//             commentInput.value = '';\n//         }\n//     };\n\n//     const toggleNav = () => {\n//         setIsNavActive(!isNavActive);\n//     };\n\n//     return (\n//         <div className=\"home\">\n//             <nav className=\"navbar\">\n//                 <div className=\"logo\">\n//                     <h1 style={{ fontFamily: \"Courier New', Courier, monospace\", fontSize: '27px' }}>\n//                         SkillBridge\n//                     </h1>\n//                 </div>\n//                 <div className=\"nav-right\">\n//                     <ul className={`nav-links ${isNavActive ? 'active' : ''}`} id=\"navLinks\">\n//                     <li><Link to=\"/AHome\" state={{ data: data }}>Home</Link></li>\n//                     <li><Link to=\"/myworks\" state={{ data: data }}>My Works</Link></li>\n//                         <li><Link to=\"/Ashorts\" state={{ data: data }}>Shorts</Link></li>\n//                         <li><Link to=\"/Aservices\" state={{ data: data }}>Services</Link></li>\n//                         <li>\n//                             <Link to=\"/notifications\" state={{ data: data }} className=\"notification-link\">\n//                                 <FontAwesomeIcon icon={faBell} />\n//                             </Link>\n//                         </li>\n//                     </ul>\n//                     <div className=\"profile\">\n//                         <img\n//                             src=\"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png\"\n//                             alt=\"Profile\"\n//                             className=\"profile-img\"\n//                         />\n//                     </div>\n//                     <div className=\"hamburger\" id=\"hamburger\" onClick={toggleNav}>\n//                         <span className=\"bar\"></span>\n//                         <span className=\"bar\"></span>\n//                         <span className=\"bar\"></span>\n//                     </div>\n//                 </div>\n//             </nav>\n//             <div className=\"videos-container\">\n//                 {videoData.map((videoFileName, index) => (\n//                     <div key={index} className=\"video-card\">\n//                         <div className=\"single-video\">\n//                             <video\n//                                 key={index}\n//                                 controls\n//                                 src={`http://localhost:5000/uploads/${videoFileName}`}\n//                                 style={{ width: '400px', margin: '10px', height: 'auto' }}\n//                             >\n//                                 Your browser does not support the video tag.\n//                             </video>\n//                         </div>\n\n//                         <div className=\"interaction\">\n//                             <button>\n//                                 <FontAwesomeIcon icon={faUserCircle} />\n//                             </button>\n//                             <button\n//                                 onClick={() => handleReaction(index, 'liked')}\n//                                 disabled={reactions[index]?.liked}\n//                             >\n//                                 <FontAwesomeIcon icon={faThumbsUp} />\n//                                 <p className=\"ptag\">{reactions[index]?.liked ? 1 : 0}</p>\n//                             </button>\n//                             <button\n//                                 onClick={() => handleReaction(index, 'disliked')}\n//                                 disabled={reactions[index]?.disliked}\n//                             >\n//                                 <FontAwesomeIcon icon={faThumbsDown} />\n//                                 <p className=\"ptag\">{reactions[index]?.disliked ? 1 : 0}</p>\n//                             </button>\n//                             <button onClick={() => toggleComment(index)}>\n//                                 <FontAwesomeIcon icon={faComment} />\n//                             </button>\n//                         </div>\n\n//                         {descriptionVisible[index] && <p className=\"video-description\">Video description here</p>}\n\n//                         {commentVisible[index] && (\n//                             <div className=\"comment-section\">\n//                                 <div className=\"comment-input-container\">\n//                                     <textarea\n//                                         id={`comment-input-${index}`}\n//                                         placeholder=\"Write a comment...\"\n//                                         className=\"comment-input\"\n//                                     ></textarea>\n//                                     <button\n//                                         className=\"submit-comment\"\n//                                         onClick={() => handleCommentSubmit(index, videoFileName)}\n//                                     >\n//                                         <FontAwesomeIcon icon={faPaperPlane} />\n//                                     </button>\n//                                 </div>\n//                                 <div className=\"comments-list\">\n//                                     {comments[videoFileName]?.map((comment, idx) => (\n//                                         <p key={idx}>{comment}</p>\n//                                     ))}\n//                                 </div>\n//                             </div>\n//                         )}\n//                     </div>\n//                 ))}\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default AShorts;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // Import axios for making API calls\nimport './AShorts.css'; // Assuming you already have the styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AShorts = () => {\n  _s();\n  const [videoData, setVideoData] = useState([]);\n  const [reactions, setReactions] = useState([]);\n  const [descriptionVisible, setDescriptionVisible] = useState([]);\n  const [commentVisible, setCommentVisible] = useState([]);\n  const [comments, setComments] = useState({});\n  useEffect(() => {\n    const fetchVideoData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/demovideos'); // Fetch demo videos from backend\n        const videos = response.data.map(item => item.demoVideos).flat(); // Flatten the array of demoVideos\n        setVideoData(videos);\n        setReactions(videos.map(() => ({\n          liked: false,\n          disliked: false\n        })));\n        setDescriptionVisible(videos.map(() => false));\n        setCommentVisible(videos.map(() => false));\n        const storedComments = {};\n        videos.forEach(video => {\n          const videoComments = JSON.parse(localStorage.getItem(`comments-${video}`)) || [];\n          storedComments[video] = videoComments;\n        });\n        setComments(storedComments);\n      } catch (error) {\n        console.error('Error fetching video data', error);\n      }\n    };\n    fetchVideoData();\n  }, []);\n  const toggleNav = () => {\n    setIsNavActive(!isNavActive);\n  };\n  const handleReaction = (index, reactionType) => {\n    setReactions(prevReactions => {\n      const newReactions = [...prevReactions];\n      if (!newReactions[index][reactionType]) {\n        newReactions[index][reactionType] = true;\n        newReactions[index][reactionType === 'liked' ? 'disliked' : 'liked'] = false;\n      }\n      return newReactions;\n    });\n  };\n  const toggleDescription = index => {\n    setDescriptionVisible(prevVisibility => {\n      const newVisibility = [...prevVisibility];\n      newVisibility[index] = !newVisibility[index];\n      return newVisibility;\n    });\n  };\n  const toggleComment = index => {\n    setCommentVisible(prevVisibility => {\n      const newVisibility = [...prevVisibility];\n      newVisibility[index] = !newVisibility[index];\n      return newVisibility;\n    });\n  };\n  const handleCommentSubmit = (index, videoId) => {\n    const commentInput = document.querySelector(`#comment-input-${index}`);\n    const commentText = commentInput.value;\n    if (commentText.trim()) {\n      const newComments = {\n        ...comments\n      };\n      if (!newComments[videoId]) {\n        newComments[videoId] = [];\n      }\n      newComments[videoId].push(commentText);\n      localStorage.setItem(`comments-${videoId}`, JSON.stringify(newComments[videoId]));\n      setComments(newComments);\n      commentInput.value = '';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            fontFamily: \"Courier New', Courier, monospace\",\n            fontSize: '27px'\n          },\n          children: \"SkillBridge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: `nav-links ${isNavActive ? 'active' : ''}`,\n          id: \"navLinks\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/AHome\",\n              state: {\n                data: data\n              },\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/myworks\",\n              state: {\n                data: data\n              },\n              children: \"My Works\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/Ashorts\",\n              state: {\n                data: data\n              },\n              children: \"Shorts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 30\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/Aservices\",\n              state: {\n                data: data\n              },\n              children: \"Services\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 30\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/notifications\",\n              state: {\n                data: data\n              },\n              className: \"notification-link\",\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faBell\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 34\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 30\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png\",\n            alt: \"Profile\",\n            className: \"profile-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hamburger\",\n          id: \"hamburger\",\n          onClick: toggleNav,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"bar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"bar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"bar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"videos-container\",\n      children: videoData.map((videoFileName, index) => {\n        var _reactions$index, _reactions$index2, _comments$videoFileNa;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"single-video\",\n            children: /*#__PURE__*/_jsxDEV(\"video\", {\n              controls: true,\n              src: `http://localhost:5000/uploads/${videoFileName}` // Assuming the videos are served from the uploads folder\n              ,\n              style: {\n                width: '400px',\n                margin: '10px',\n                height: 'auto'\n              },\n              children: \"Your browser does not support the video tag.\"\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"interaction\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleReaction(index, 'liked'),\n              children: [\"\\uD83D\\uDC4D \", (_reactions$index = reactions[index]) !== null && _reactions$index !== void 0 && _reactions$index.liked ? 1 : 0]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleReaction(index, 'disliked'),\n              children: [\"\\uD83D\\uDC4E \", (_reactions$index2 = reactions[index]) !== null && _reactions$index2 !== void 0 && _reactions$index2.disliked ? 1 : 0]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => toggleDescription(index),\n              children: \"\\uD83D\\uDCC4 Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => toggleComment(index),\n              children: \"\\uD83D\\uDCAC Comments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 25\n          }, this), descriptionVisible[index] && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"video-description\",\n            children: \"Video description here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 55\n          }, this), commentVisible[index] && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: `comment-input-${index}`,\n              placeholder: \"Write a comment...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleCommentSubmit(index, videoFileName),\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comments-list\",\n              children: (_comments$videoFileNa = comments[videoFileName]) === null || _comments$videoFileNa === void 0 ? void 0 : _comments$videoFileNa.map((comment, idx) => /*#__PURE__*/_jsxDEV(\"p\", {\n                children: comment\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 272,\n    columnNumber: 9\n  }, this);\n};\n_s(AShorts, \"WTzjkYK2K7cmhtgc/ZQZl0Fy48Y=\");\n_c = AShorts;\nexport default AShorts;\nvar _c;\n$RefreshReg$(_c, \"AShorts\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","AShorts","_s","videoData","setVideoData","reactions","setReactions","descriptionVisible","setDescriptionVisible","commentVisible","setCommentVisible","comments","setComments","fetchVideoData","response","get","videos","data","map","item","demoVideos","flat","liked","disliked","storedComments","forEach","video","videoComments","JSON","parse","localStorage","getItem","error","console","toggleNav","setIsNavActive","isNavActive","handleReaction","index","reactionType","prevReactions","newReactions","toggleDescription","prevVisibility","newVisibility","toggleComment","handleCommentSubmit","videoId","commentInput","document","querySelector","commentText","value","trim","newComments","push","setItem","stringify","className","children","style","fontFamily","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","id","Link","to","state","FontAwesomeIcon","icon","faBell","src","alt","onClick","videoFileName","_reactions$index","_reactions$index2","_comments$videoFileNa","controls","width","margin","height","placeholder","comment","idx","_c","$RefreshReg$"],"sources":["D:/TechTalentConnect/frontend/src/components/AShorts/AShorts.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { faThumbsUp, faThumbsDown, faComment, faUserCircle, faPaperPlane } from '@fortawesome/free-solid-svg-icons';\r\n// import { Link, useLocation } from 'react-router-dom';\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n// import { faBell } from '@fortawesome/free-solid-svg-icons';\r\n// import './AShorts.css';\r\n\r\n// const AShorts = () => {\r\n//     const [videoData, setVideoData] = useState([]);\r\n//     const [reactions, setReactions] = useState([]);\r\n//     const [descriptionVisible, setDescriptionVisible] = useState([]);\r\n//     const [commentVisible, setCommentVisible] = useState([]);\r\n//     const [comments, setComments] = useState({});\r\n//     const [isNavActive, setIsNavActive] = useState(false);\r\n//     const location = useLocation();\r\n//     const { data } = location.state || {};\r\n//     useEffect(() => {\r\n//         const fetchVideoData = () => {\r\n//             const videos = ['video1.mp4', 'video2.mp4']; // Replace with your video data\r\n//             setVideoData(videos);\r\n//             setReactions(videos.map(() => ({ liked: false, disliked: false })));\r\n//             setDescriptionVisible(videos.map(() => false));\r\n//             setCommentVisible(videos.map(() => false));\r\n\r\n//             const storedComments = {};\r\n//             videos.forEach(video => {\r\n//                 const videoComments = JSON.parse(localStorage.getItem(`comments-${video}`)) || [];\r\n//                 storedComments[video] = videoComments;\r\n//             });\r\n//             setComments(storedComments);\r\n//         };\r\n\r\n//         fetchVideoData();\r\n//     }, []);\r\n\r\n//     const handleReaction = (index, reactionType) => {\r\n//         setReactions((prevReactions) => {\r\n//             const newReactions = [...prevReactions];\r\n//             if (!newReactions[index][reactionType]) {\r\n//                 newReactions[index][reactionType] = true;\r\n//                 newReactions[index][reactionType === 'liked' ? 'disliked' : 'liked'] = false;\r\n//             }\r\n//             return newReactions;\r\n//         });\r\n//     };\r\n\r\n//     const toggleDescription = (index) => {\r\n//         setDescriptionVisible((prevVisibility) => {\r\n//             const newVisibility = [...prevVisibility];\r\n//             newVisibility[index] = !newVisibility[index];\r\n//             return newVisibility;\r\n//         });\r\n//     };\r\n\r\n//     const toggleComment = (index) => {\r\n//         setCommentVisible((prevVisibility) => {\r\n//             const newVisibility = [...prevVisibility];\r\n//             newVisibility[index] = !newVisibility[index];\r\n//             return newVisibility;\r\n//         });\r\n//     };\r\n\r\n//     const handleCommentSubmit = (index, videoId) => {\r\n//         const commentInput = document.querySelector(`#comment-input-${index}`);\r\n//         const commentText = commentInput.value;\r\n\r\n//         if (commentText.trim()) {\r\n//             const newComments = { ...comments };\r\n//             if (!newComments[videoId]) {\r\n//                 newComments[videoId] = [];\r\n//             }\r\n//             newComments[videoId].push(commentText);\r\n\r\n//             localStorage.setItem(`comments-${videoId}`, JSON.stringify(newComments[videoId]));\r\n\r\n//             setComments(newComments);\r\n//             commentInput.value = '';\r\n//         }\r\n//     };\r\n\r\n//     const toggleNav = () => {\r\n//         setIsNavActive(!isNavActive);\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"home\">\r\n//             <nav className=\"navbar\">\r\n//                 <div className=\"logo\">\r\n//                     <h1 style={{ fontFamily: \"Courier New', Courier, monospace\", fontSize: '27px' }}>\r\n//                         SkillBridge\r\n//                     </h1>\r\n//                 </div>\r\n//                 <div className=\"nav-right\">\r\n//                     <ul className={`nav-links ${isNavActive ? 'active' : ''}`} id=\"navLinks\">\r\n//                     <li><Link to=\"/AHome\" state={{ data: data }}>Home</Link></li>\r\n//                     <li><Link to=\"/myworks\" state={{ data: data }}>My Works</Link></li>\r\n//                         <li><Link to=\"/Ashorts\" state={{ data: data }}>Shorts</Link></li>\r\n//                         <li><Link to=\"/Aservices\" state={{ data: data }}>Services</Link></li>\r\n//                         <li>\r\n//                             <Link to=\"/notifications\" state={{ data: data }} className=\"notification-link\">\r\n//                                 <FontAwesomeIcon icon={faBell} />\r\n//                             </Link>\r\n//                         </li>\r\n//                     </ul>\r\n//                     <div className=\"profile\">\r\n//                         <img\r\n//                             src=\"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png\"\r\n//                             alt=\"Profile\"\r\n//                             className=\"profile-img\"\r\n//                         />\r\n//                     </div>\r\n//                     <div className=\"hamburger\" id=\"hamburger\" onClick={toggleNav}>\r\n//                         <span className=\"bar\"></span>\r\n//                         <span className=\"bar\"></span>\r\n//                         <span className=\"bar\"></span>\r\n//                     </div>\r\n//                 </div>\r\n//             </nav>\r\n//             <div className=\"videos-container\">\r\n//                 {videoData.map((videoFileName, index) => (\r\n//                     <div key={index} className=\"video-card\">\r\n//                         <div className=\"single-video\">\r\n//                             <video\r\n//                                 key={index}\r\n//                                 controls\r\n//                                 src={`http://localhost:5000/uploads/${videoFileName}`}\r\n//                                 style={{ width: '400px', margin: '10px', height: 'auto' }}\r\n//                             >\r\n//                                 Your browser does not support the video tag.\r\n//                             </video>\r\n//                         </div>\r\n\r\n//                         <div className=\"interaction\">\r\n//                             <button>\r\n//                                 <FontAwesomeIcon icon={faUserCircle} />\r\n//                             </button>\r\n//                             <button\r\n//                                 onClick={() => handleReaction(index, 'liked')}\r\n//                                 disabled={reactions[index]?.liked}\r\n//                             >\r\n//                                 <FontAwesomeIcon icon={faThumbsUp} />\r\n//                                 <p className=\"ptag\">{reactions[index]?.liked ? 1 : 0}</p>\r\n//                             </button>\r\n//                             <button\r\n//                                 onClick={() => handleReaction(index, 'disliked')}\r\n//                                 disabled={reactions[index]?.disliked}\r\n//                             >\r\n//                                 <FontAwesomeIcon icon={faThumbsDown} />\r\n//                                 <p className=\"ptag\">{reactions[index]?.disliked ? 1 : 0}</p>\r\n//                             </button>\r\n//                             <button onClick={() => toggleComment(index)}>\r\n//                                 <FontAwesomeIcon icon={faComment} />\r\n//                             </button>\r\n//                         </div>\r\n\r\n//                         {descriptionVisible[index] && <p className=\"video-description\">Video description here</p>}\r\n\r\n//                         {commentVisible[index] && (\r\n//                             <div className=\"comment-section\">\r\n//                                 <div className=\"comment-input-container\">\r\n//                                     <textarea\r\n//                                         id={`comment-input-${index}`}\r\n//                                         placeholder=\"Write a comment...\"\r\n//                                         className=\"comment-input\"\r\n//                                     ></textarea>\r\n//                                     <button\r\n//                                         className=\"submit-comment\"\r\n//                                         onClick={() => handleCommentSubmit(index, videoFileName)}\r\n//                                     >\r\n//                                         <FontAwesomeIcon icon={faPaperPlane} />\r\n//                                     </button>\r\n//                                 </div>\r\n//                                 <div className=\"comments-list\">\r\n//                                     {comments[videoFileName]?.map((comment, idx) => (\r\n//                                         <p key={idx}>{comment}</p>\r\n//                                     ))}\r\n//                                 </div>\r\n//                             </div>\r\n//                         )}\r\n//                     </div>\r\n//                 ))}\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default AShorts;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios'; // Import axios for making API calls\r\nimport './AShorts.css'; // Assuming you already have the styles\r\n\r\nconst AShorts = () => {\r\n    const [videoData, setVideoData] = useState([]);\r\n    const [reactions, setReactions] = useState([]);\r\n    const [descriptionVisible, setDescriptionVisible] = useState([]);\r\n    const [commentVisible, setCommentVisible] = useState([]);\r\n    const [comments, setComments] = useState({});\r\n\r\n    useEffect(() => {\r\n        const fetchVideoData = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:5000/api/demovideos'); // Fetch demo videos from backend\r\n                const videos = response.data.map(item => item.demoVideos).flat(); // Flatten the array of demoVideos\r\n                setVideoData(videos);\r\n                setReactions(videos.map(() => ({ liked: false, disliked: false })));\r\n                setDescriptionVisible(videos.map(() => false));\r\n                setCommentVisible(videos.map(() => false));\r\n\r\n                const storedComments = {};\r\n                videos.forEach(video => {\r\n                    const videoComments = JSON.parse(localStorage.getItem(`comments-${video}`)) || [];\r\n                    storedComments[video] = videoComments;\r\n                });\r\n                setComments(storedComments);\r\n            } catch (error) {\r\n                console.error('Error fetching video data', error);\r\n            }\r\n        };\r\n\r\n        fetchVideoData();\r\n    }, []);\r\n    const toggleNav = () => {\r\n        setIsNavActive(!isNavActive);\r\n    };\r\n    const handleReaction = (index, reactionType) => {\r\n        setReactions(prevReactions => {\r\n            const newReactions = [...prevReactions];\r\n            if (!newReactions[index][reactionType]) {\r\n                newReactions[index][reactionType] = true;\r\n                newReactions[index][reactionType === 'liked' ? 'disliked' : 'liked'] = false;\r\n            }\r\n            return newReactions;\r\n        });\r\n    };\r\n\r\n    const toggleDescription = (index) => {\r\n        setDescriptionVisible(prevVisibility => {\r\n            const newVisibility = [...prevVisibility];\r\n            newVisibility[index] = !newVisibility[index];\r\n            return newVisibility;\r\n        });\r\n    };\r\n\r\n    const toggleComment = (index) => {\r\n        setCommentVisible(prevVisibility => {\r\n            const newVisibility = [...prevVisibility];\r\n            newVisibility[index] = !newVisibility[index];\r\n            return newVisibility;\r\n        });\r\n    };\r\n\r\n    const handleCommentSubmit = (index, videoId) => {\r\n        const commentInput = document.querySelector(`#comment-input-${index}`);\r\n        const commentText = commentInput.value;\r\n\r\n        if (commentText.trim()) {\r\n            const newComments = { ...comments };\r\n            if (!newComments[videoId]) {\r\n                newComments[videoId] = [];\r\n            }\r\n            newComments[videoId].push(commentText);\r\n\r\n            localStorage.setItem(`comments-${videoId}`, JSON.stringify(newComments[videoId]));\r\n\r\n            setComments(newComments);\r\n            commentInput.value = '';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            <nav className=\"navbar\">\r\n                 <div className=\"logo\">\r\n                     <h1 style={{ fontFamily: \"Courier New', Courier, monospace\", fontSize: '27px' }}>\r\n                         SkillBridge\r\n                     </h1>\r\n                 </div>\r\n                 <div className=\"nav-right\">\r\n                     <ul className={`nav-links ${isNavActive ? 'active' : ''}`} id=\"navLinks\">\r\n                     <li><Link to=\"/AHome\" state={{ data: data }}>Home</Link></li>\r\n                     <li><Link to=\"/myworks\" state={{ data: data }}>My Works</Link></li>\r\n                         <li><Link to=\"/Ashorts\" state={{ data: data }}>Shorts</Link></li>\r\n                         <li><Link to=\"/Aservices\" state={{ data: data }}>Services</Link></li>\r\n                         <li>\r\n                             <Link to=\"/notifications\" state={{ data: data }} className=\"notification-link\">\r\n                                 <FontAwesomeIcon icon={faBell} />\r\n                             </Link>\r\n                         </li>\r\n                     </ul>\r\n                     <div className=\"profile\">\r\n                         <img\r\n                             src=\"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png\"\r\n                             alt=\"Profile\"\r\n                             className=\"profile-img\"\r\n                         />\r\n                     </div>\r\n                     <div className=\"hamburger\" id=\"hamburger\" onClick={toggleNav}>\r\n                         <span className=\"bar\"></span>\r\n                         <span className=\"bar\"></span>\r\n                         <span className=\"bar\"></span>\r\n                     </div>\r\n                 </div>\r\n             </nav>\r\n            <div className=\"videos-container\">\r\n                {videoData.map((videoFileName, index) => (\r\n                    <div key={index} className=\"video-card\">\r\n                        <div className=\"single-video\">\r\n                            <video\r\n                                key={index}\r\n                                controls\r\n                                src={`http://localhost:5000/uploads/${videoFileName}`} // Assuming the videos are served from the uploads folder\r\n                                style={{ width: '400px', margin: '10px', height: 'auto' }}\r\n                            >\r\n                                Your browser does not support the video tag.\r\n                            </video>\r\n                        </div>\r\n\r\n                        <div className=\"interaction\">\r\n                            <button onClick={() => handleReaction(index, 'liked')}>\r\n                                👍 {reactions[index]?.liked ? 1 : 0}\r\n                            </button>\r\n                            <button onClick={() => handleReaction(index, 'disliked')}>\r\n                                👎 {reactions[index]?.disliked ? 1 : 0}\r\n                            </button>\r\n                            <button onClick={() => toggleDescription(index)}>📄 Description</button>\r\n                            <button onClick={() => toggleComment(index)}>💬 Comments</button>\r\n                        </div>\r\n\r\n                        {descriptionVisible[index] && <p className=\"video-description\">Video description here</p>}\r\n\r\n                        {commentVisible[index] && (\r\n                            <div className=\"comment-section\">\r\n                                <textarea id={`comment-input-${index}`} placeholder=\"Write a comment...\" />\r\n                                <button onClick={() => handleCommentSubmit(index, videoFileName)}>Submit</button>\r\n                                <div className=\"comments-list\">\r\n                                    {comments[videoFileName]?.map((comment, idx) => (\r\n                                        <p key={idx}>{comment}</p>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AShorts;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAC3B,OAAO,eAAe,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACW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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}