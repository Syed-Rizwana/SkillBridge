{"ast":null,"code":"var _jsxFileName = \"D:\\\\TechTalentConnect\\\\frontend\\\\src\\\\components\\\\notifications\\\\notifications.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import './notifications.css';\n// import { Link, useLocation } from 'react-router-dom';\n// import axios from 'axios';\n\n// const Notifications = () => {\n//     const [notifications, setNotifications] = useState([]);\n//     const [pendingNotifications, setPendingNotifications] = useState([]);\n//     const [acceptedNotifications, setAcceptedNotifications] = useState([]);\n//     const [rejectedNotifications, setRejectedNotifications] = useState([]);\n//     const [clickedButtons, setClickedButtons] = useState({});\n\n//     const location = useLocation();\n//     const { data } = location.state || {};\n\n//     const fetchNotifications = async () => {\n//         try {\n//             if (data) {\n//                 const response = await axios.get(`http://localhost:5000/getNotifications/${data}`);\n//                 setNotifications(response.data);\n//             }\n//         } catch (error) {\n//             console.error('Error fetching notifications:', error);\n//         }\n//     };\n\n//     useEffect(() => {\n//         if (data) {\n//             fetchNotifications();\n//         }\n//     }, [data]);\n\n//     // Categorize notifications based on status\n//     useEffect(() => {\n//         const pending = notifications.filter(notification => notification.status === 'pending');\n//         const accepted = notifications.filter(notification => notification.status === 'accepted');\n//         const rejected = notifications.filter(notification => notification.status === 'rejected');\n\n//         setPendingNotifications(pending);\n//         setAcceptedNotifications(accepted);\n//         setRejectedNotifications(rejected);\n//     }, [notifications]);\n\n//     const handleAccept = async (notification) => {\n//         try {\n//             await axios.post('http://localhost:5000/acceptBooking', {\n//                 bookingId: notification._id,\n//                 userEmail: notification.userEmail // Send the userEmail to the backend\n//             });\n//             console.log('Booking accepted');\n//             setClickedButtons((prevState) => ({\n//                 ...prevState,\n//                 [notification._id]: 'accepted',\n//             }));\n//             fetchNotifications(); // Refresh notifications\n//         } catch (error) {\n//             console.error('Error accepting booking:', error);\n//         }\n//     };\n\n//     const handleReject = async (notification) => {\n//         try {\n//             await axios.post('http://localhost:5000/rejectBooking', {\n//                 bookingId: notification._id,\n//                 userEmail: notification.userEmail // Send the userEmail to the backend\n//             });\n//             console.log('Booking rejected');\n//             setClickedButtons((prevState) => ({\n//                 ...prevState,\n//                 [notification._id]: 'rejected',\n//             }));\n//             fetchNotifications(); // Refresh notifications\n//         } catch (error) {\n//             console.error('Error rejecting booking:', error);\n//         }\n//     };\n\n//     return (\n//         <>\n//             <nav className=\"navbar\">\n//                 <div className=\"logo\">\n//                     <h1 style={{ fontFamily: \"Courier New', Courier, monospace\", fontSize: '27px' }}>\n//                         SkillBridge\n//                     </h1>\n//                 </div>\n//                 <div className=\"nav-right\">\n//                     <ul className=\"nav-links\">\n//                         <li><Link to=\"/Home\">Home</Link></li>\n//                         <li><Link to=\"/videos\">Videos</Link></li>\n//                         <li><Link to=\"/myworks\">My works</Link></li>\n//                         <li><Link to=\"/notifications\">Notifications</Link></li>\n//                     </ul>\n//                     <div className=\"profile\">\n//                         <img\n//                             src=\"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png\"\n//                             alt=\"Profile\"\n//                             className=\"profile-img\"\n//                         />\n//                     </div>\n//                 </div>\n//             </nav>\n\n//             <div className=\"Notifications-container\">\n//                 {/* Pending Notifications */}\n//                 <h2>Pending Notifications</h2>\n//                 <ul>\n//                     {pendingNotifications.length > 0 ? (\n//                         pendingNotifications.map((notification) => (\n//                             <li key={notification._id} className=\"notification-item\">\n//                                 <p><strong>Hand Type:</strong> {notification.handType}</p>\n//                                 <p><strong>Number of Hands:</strong> {notification.numberOfHands}</p>\n//                                 <p><strong>Address:</strong> {notification.address}</p>\n//                                 <p><strong>Start Time:</strong> {new Date(notification.startTime).toLocaleString()}</p>\n//                                 <p><strong>End Time:</strong> {new Date(notification.endTime).toLocaleString()}</p>\n//                                 <p><strong>Total Price:</strong> ${notification.totalPrice}</p>\n//                                 <div className=\"notification-buttons\">\n//                                     <button\n//                                         className=\"accept-button\"\n//                                         onClick={() => handleAccept(notification)}\n//                                         disabled={clickedButtons[notification._id] === 'accepted'}\n//                                     >\n//                                         Accept\n//                                     </button>\n//                                     <button\n//                                         className=\"reject-button\"\n//                                         onClick={() => handleReject(notification)}\n//                                         disabled={clickedButtons[notification._id] === 'rejected'}\n//                                     >\n//                                         Reject\n//                                     </button>\n//                                 </div>\n//                             </li>\n//                         ))\n//                     ) : (\n//                         <p>No pending notifications</p>\n//                     )}\n//                 </ul>\n\n//                 {/* Accepted Notifications */}\n//                 <h2>Accepted Notifications</h2>\n//                 <ul>\n//                     {acceptedNotifications.length > 0 ? (\n//                         acceptedNotifications.map((notification) => (\n//                             <li key={notification._id} className=\"notification-item\">\n//                                 <p><strong>Hand Type:</strong> {notification.handType}</p>\n//                                 <p><strong>Number of Hands:</strong> {notification.numberOfHands}</p>\n//                                 <p><strong>Address:</strong> {notification.address}</p>\n//                                 <p><strong>Start Time:</strong> {new Date(notification.startTime).toLocaleString()}</p>\n//                                 <p><strong>End Time:</strong> {new Date(notification.endTime).toLocaleString()}</p>\n//                                 <p><strong>Total Price:</strong> ${notification.totalPrice}</p>\n//                                 <p>Status: Accepted</p>\n//                             </li>\n//                         ))\n//                     ) : (\n//                         <p>No accepted notifications</p>\n//                     )}\n//                 </ul>\n\n//                 {/* Rejected Notifications */}\n//                 <h2>Rejected Notifications</h2>\n//                 <ul>\n//                     {rejectedNotifications.length > 0 ? (\n//                         rejectedNotifications.map((notification) => (\n//                             <li key={notification._id} className=\"notification-item\">\n//                                 <p><strong>Hand Type:</strong> {notification.handType}</p>\n//                                 <p><strong>Number of Hands:</strong> {notification.numberOfHands}</p>\n//                                 <p><strong>Address:</strong> {notification.address}</p>\n//                                 <p><strong>Start Time:</strong> {new Date(notification.startTime).toLocaleString()}</p>\n//                                 <p><strong>End Time:</strong> {new Date(notification.endTime).toLocaleString()}</p>\n//                                 <p><strong>Total Price:</strong> ${notification.totalPrice}</p>\n//                                 <p>Status: Rejected</p>\n//                             </li>\n//                         ))\n//                     ) : (\n//                         <p>No rejected notifications</p>\n//                     )}\n//                 </ul>\n//             </div>\n//         </>\n//     );\n// };\n\n// export default Notifications;\nimport React, { useState, useEffect } from 'react';\nimport './notifications.css';\nimport { Link, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBell } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Notifications = () => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [pendingNotifications, setPendingNotifications] = useState([]);\n  const [acceptedNotifications, setAcceptedNotifications] = useState([]);\n  const [rejectedNotifications, setRejectedNotifications] = useState([]);\n  const [clickedButtons, setClickedButtons] = useState({});\n  const location = useLocation();\n  const {\n    data\n  } = location.state || {};\n  console.log(data);\n  const fetchNotifications = async () => {\n    try {\n      if (data) {\n        const response = await axios.get(`http://localhost:5000/getNotifications/${data}`);\n        setNotifications(response.data);\n      }\n    } catch (error) {\n      console.error('Error fetching notifications:', error);\n    }\n  };\n  useEffect(() => {\n    if (data) {\n      fetchNotifications();\n    }\n  }, [data]);\n  useEffect(() => {\n    const pending = notifications.filter(notification => notification.status === 'pending');\n    const accepted = notifications.filter(notification => notification.status === 'accepted');\n    const rejected = notifications.filter(notification => notification.status === 'rejected');\n    setPendingNotifications(pending);\n    setAcceptedNotifications(accepted);\n    setRejectedNotifications(rejected);\n  }, [notifications]);\n  const handleAccept = async notification => {\n    try {\n      await axios.post('http://localhost:5000/acceptBooking', {\n        bookingId: notification._id,\n        userEmail: notification.userEmail\n      });\n      console.log('Booking accepted');\n      setPendingNotifications(prev => prev.filter(n => n._id !== notification._id));\n      setAcceptedNotifications(prev => [...prev, {\n        ...notification,\n        status: 'accepted'\n      }]);\n      setClickedButtons(prevState => ({\n        ...prevState,\n        [notification._id]: 'accepted'\n      }));\n    } catch (error) {\n      console.error('Error accepting booking:', error);\n    }\n  };\n  const handleReject = async notification => {\n    try {\n      await axios.post('http://localhost:5000/rejectBooking', {\n        bookingId: notification._id,\n        userEmail: notification.userEmail\n      });\n      console.log('Booking rejected');\n      setPendingNotifications(prev => prev.filter(n => n._id !== notification._id));\n      setRejectedNotifications(prev => [...prev, {\n        ...notification,\n        status: 'rejected'\n      }]);\n      setClickedButtons(prevState => ({\n        ...prevState,\n        [notification._id]: 'rejected'\n      }));\n    } catch (error) {\n      console.error('Error rejecting booking:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            fontFamily: \"Courier New', Courier, monospace\",\n            fontSize: '27px'\n          },\n          children: \"SkillBridge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"nav-links\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/AHome\",\n              state: {\n                data: data\n              },\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/myworks\",\n              state: {\n                data: data\n              },\n              children: \"My Works\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/Ashorts\",\n              state: {\n                data: data\n              },\n              children: \"Shorts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/Aservices\",\n              state: {\n                data: data\n              },\n              children: \"Services\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/notifications\",\n              state: {\n                data: data\n              },\n              className: \"notification-link\",\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faBell\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png\",\n            alt: \"Profile\",\n            className: \"profile-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Notifications-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Pending Notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: pendingNotifications.length > 0 ? pendingNotifications.map(notification => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"notification-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Hand Type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 36\n            }, this), \" \", notification.handType]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Number of Hands:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 36\n            }, this), \" \", notification.numberOfHands]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Address:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 36\n            }, this), \" \", notification.address]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Start Time:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 36\n            }, this), \" \", new Date(notification.startTime).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"End Time:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 36\n            }, this), \" \", new Date(notification.endTime).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Total Price:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 36\n            }, this), \" $\", notification.totalPrice]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"accept-button\",\n              onClick: () => handleAccept(notification),\n              disabled: clickedButtons[notification._id] === 'accepted',\n              children: \"Accept\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"reject-button\",\n              onClick: () => handleReject(notification),\n              disabled: clickedButtons[notification._id] === 'rejected',\n              children: \"Reject\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 33\n          }, this)]\n        }, notification._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No pending notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Accepted Notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: acceptedNotifications.length > 0 ? acceptedNotifications.map(notification => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"notification-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Hand Type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 36\n            }, this), \" \", notification.handType]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Number of Hands:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 36\n            }, this), \" \", notification.numberOfHands]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Address:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 36\n            }, this), \" \", notification.address]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Start Time:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 36\n            }, this), \" \", new Date(notification.startTime).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"End Time:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 36\n            }, this), \" \", new Date(notification.endTime).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Total Price:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 36\n            }, this), \" $\", notification.totalPrice]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Status: Accepted\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 33\n          }, this)]\n        }, notification._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No accepted notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Rejected Notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: rejectedNotifications.length > 0 ? rejectedNotifications.map(notification => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"notification-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Hand Type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 36\n            }, this), \" \", notification.handType]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Number of Hands:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 36\n            }, this), \" \", notification.numberOfHands]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Address:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 36\n            }, this), \" \", notification.address]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Start Time:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 36\n            }, this), \" \", new Date(notification.startTime).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"End Time:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 36\n            }, this), \" \", new Date(notification.endTime).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Total Price:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 36\n            }, this), \" $\", notification.totalPrice]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Status: Rejected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 33\n          }, this)]\n        }, notification._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No rejected notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Notifications, \"+BANd3keSPEShJhlXuqUTX4TV0c=\", false, function () {\n  return [useLocation];\n});\n_c = Notifications;\nexport default Notifications;\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["React","useState","useEffect","Link","useLocation","axios","FontAwesomeIcon","faBell","jsxDEV","_jsxDEV","Fragment","_Fragment","Notifications","_s","notifications","setNotifications","pendingNotifications","setPendingNotifications","acceptedNotifications","setAcceptedNotifications","rejectedNotifications","setRejectedNotifications","clickedButtons","setClickedButtons","location","data","state","console","log","fetchNotifications","response","get","error","pending","filter","notification","status","accepted","rejected","handleAccept","post","bookingId","_id","userEmail","prev","n","prevState","handleReject","children","className","style","fontFamily","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","to","icon","src","alt","length","map","handType","numberOfHands","address","Date","startTime","toLocaleString","endTime","totalPrice","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/TechTalentConnect/frontend/src/components/notifications/notifications.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import './notifications.css';\r\n// import { Link, useLocation } from 'react-router-dom';\r\n// import axios from 'axios';\r\n\r\n// const Notifications = () => {\r\n//     const [notifications, setNotifications] = useState([]);\r\n//     const [pendingNotifications, setPendingNotifications] = useState([]);\r\n//     const [acceptedNotifications, setAcceptedNotifications] = useState([]);\r\n//     const [rejectedNotifications, setRejectedNotifications] = useState([]);\r\n//     const [clickedButtons, setClickedButtons] = useState({});\r\n\r\n//     const location = useLocation();\r\n//     const { data } = location.state || {};\r\n\r\n//     const fetchNotifications = async () => {\r\n//         try {\r\n//             if (data) {\r\n//                 const response = await axios.get(`http://localhost:5000/getNotifications/${data}`);\r\n//                 setNotifications(response.data);\r\n//             }\r\n//         } catch (error) {\r\n//             console.error('Error fetching notifications:', error);\r\n//         }\r\n//     };\r\n\r\n//     useEffect(() => {\r\n//         if (data) {\r\n//             fetchNotifications();\r\n//         }\r\n//     }, [data]);\r\n\r\n//     // Categorize notifications based on status\r\n//     useEffect(() => {\r\n//         const pending = notifications.filter(notification => notification.status === 'pending');\r\n//         const accepted = notifications.filter(notification => notification.status === 'accepted');\r\n//         const rejected = notifications.filter(notification => notification.status === 'rejected');\r\n\r\n//         setPendingNotifications(pending);\r\n//         setAcceptedNotifications(accepted);\r\n//         setRejectedNotifications(rejected);\r\n//     }, [notifications]);\r\n\r\n//     const handleAccept = async (notification) => {\r\n//         try {\r\n//             await axios.post('http://localhost:5000/acceptBooking', {\r\n//                 bookingId: notification._id,\r\n//                 userEmail: notification.userEmail // Send the userEmail to the backend\r\n//             });\r\n//             console.log('Booking accepted');\r\n//             setClickedButtons((prevState) => ({\r\n//                 ...prevState,\r\n//                 [notification._id]: 'accepted',\r\n//             }));\r\n//             fetchNotifications(); // Refresh notifications\r\n//         } catch (error) {\r\n//             console.error('Error accepting booking:', error);\r\n//         }\r\n//     };\r\n\r\n//     const handleReject = async (notification) => {\r\n//         try {\r\n//             await axios.post('http://localhost:5000/rejectBooking', {\r\n//                 bookingId: notification._id,\r\n//                 userEmail: notification.userEmail // Send the userEmail to the backend\r\n//             });\r\n//             console.log('Booking rejected');\r\n//             setClickedButtons((prevState) => ({\r\n//                 ...prevState,\r\n//                 [notification._id]: 'rejected',\r\n//             }));\r\n//             fetchNotifications(); // Refresh notifications\r\n//         } catch (error) {\r\n//             console.error('Error rejecting booking:', error);\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <>\r\n//             <nav className=\"navbar\">\r\n//                 <div className=\"logo\">\r\n//                     <h1 style={{ fontFamily: \"Courier New', Courier, monospace\", fontSize: '27px' }}>\r\n//                         SkillBridge\r\n//                     </h1>\r\n//                 </div>\r\n//                 <div className=\"nav-right\">\r\n//                     <ul className=\"nav-links\">\r\n//                         <li><Link to=\"/Home\">Home</Link></li>\r\n//                         <li><Link to=\"/videos\">Videos</Link></li>\r\n//                         <li><Link to=\"/myworks\">My works</Link></li>\r\n//                         <li><Link to=\"/notifications\">Notifications</Link></li>\r\n//                     </ul>\r\n//                     <div className=\"profile\">\r\n//                         <img\r\n//                             src=\"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png\"\r\n//                             alt=\"Profile\"\r\n//                             className=\"profile-img\"\r\n//                         />\r\n//                     </div>\r\n//                 </div>\r\n//             </nav>\r\n\r\n//             <div className=\"Notifications-container\">\r\n//                 {/* Pending Notifications */}\r\n//                 <h2>Pending Notifications</h2>\r\n//                 <ul>\r\n//                     {pendingNotifications.length > 0 ? (\r\n//                         pendingNotifications.map((notification) => (\r\n//                             <li key={notification._id} className=\"notification-item\">\r\n//                                 <p><strong>Hand Type:</strong> {notification.handType}</p>\r\n//                                 <p><strong>Number of Hands:</strong> {notification.numberOfHands}</p>\r\n//                                 <p><strong>Address:</strong> {notification.address}</p>\r\n//                                 <p><strong>Start Time:</strong> {new Date(notification.startTime).toLocaleString()}</p>\r\n//                                 <p><strong>End Time:</strong> {new Date(notification.endTime).toLocaleString()}</p>\r\n//                                 <p><strong>Total Price:</strong> ${notification.totalPrice}</p>\r\n//                                 <div className=\"notification-buttons\">\r\n//                                     <button\r\n//                                         className=\"accept-button\"\r\n//                                         onClick={() => handleAccept(notification)}\r\n//                                         disabled={clickedButtons[notification._id] === 'accepted'}\r\n//                                     >\r\n//                                         Accept\r\n//                                     </button>\r\n//                                     <button\r\n//                                         className=\"reject-button\"\r\n//                                         onClick={() => handleReject(notification)}\r\n//                                         disabled={clickedButtons[notification._id] === 'rejected'}\r\n//                                     >\r\n//                                         Reject\r\n//                                     </button>\r\n//                                 </div>\r\n//                             </li>\r\n//                         ))\r\n//                     ) : (\r\n//                         <p>No pending notifications</p>\r\n//                     )}\r\n//                 </ul>\r\n\r\n//                 {/* Accepted Notifications */}\r\n//                 <h2>Accepted Notifications</h2>\r\n//                 <ul>\r\n//                     {acceptedNotifications.length > 0 ? (\r\n//                         acceptedNotifications.map((notification) => (\r\n//                             <li key={notification._id} className=\"notification-item\">\r\n//                                 <p><strong>Hand Type:</strong> {notification.handType}</p>\r\n//                                 <p><strong>Number of Hands:</strong> {notification.numberOfHands}</p>\r\n//                                 <p><strong>Address:</strong> {notification.address}</p>\r\n//                                 <p><strong>Start Time:</strong> {new Date(notification.startTime).toLocaleString()}</p>\r\n//                                 <p><strong>End Time:</strong> {new Date(notification.endTime).toLocaleString()}</p>\r\n//                                 <p><strong>Total Price:</strong> ${notification.totalPrice}</p>\r\n//                                 <p>Status: Accepted</p>\r\n//                             </li>\r\n//                         ))\r\n//                     ) : (\r\n//                         <p>No accepted notifications</p>\r\n//                     )}\r\n//                 </ul>\r\n\r\n//                 {/* Rejected Notifications */}\r\n//                 <h2>Rejected Notifications</h2>\r\n//                 <ul>\r\n//                     {rejectedNotifications.length > 0 ? (\r\n//                         rejectedNotifications.map((notification) => (\r\n//                             <li key={notification._id} className=\"notification-item\">\r\n//                                 <p><strong>Hand Type:</strong> {notification.handType}</p>\r\n//                                 <p><strong>Number of Hands:</strong> {notification.numberOfHands}</p>\r\n//                                 <p><strong>Address:</strong> {notification.address}</p>\r\n//                                 <p><strong>Start Time:</strong> {new Date(notification.startTime).toLocaleString()}</p>\r\n//                                 <p><strong>End Time:</strong> {new Date(notification.endTime).toLocaleString()}</p>\r\n//                                 <p><strong>Total Price:</strong> ${notification.totalPrice}</p>\r\n//                                 <p>Status: Rejected</p>\r\n//                             </li>\r\n//                         ))\r\n//                     ) : (\r\n//                         <p>No rejected notifications</p>\r\n//                     )}\r\n//                 </ul>\r\n//             </div>\r\n//         </>\r\n//     );\r\n// };\r\n\r\n// export default Notifications;\r\nimport React, { useState, useEffect } from 'react';\r\nimport './notifications.css';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBell } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Notifications = () => {\r\n    const [notifications, setNotifications] = useState([]);\r\n    const [pendingNotifications, setPendingNotifications] = useState([]);\r\n    const [acceptedNotifications, setAcceptedNotifications] = useState([]);\r\n    const [rejectedNotifications, setRejectedNotifications] = useState([]);\r\n    const [clickedButtons, setClickedButtons] = useState({});\r\n\r\n    const location = useLocation();\r\n    const { data } = location.state || {};\r\n    console.log(data);\r\n    \r\n    const fetchNotifications = async () => {\r\n        try {\r\n            if (data) {\r\n                const response = await axios.get(`http://localhost:5000/getNotifications/${data}`);\r\n                setNotifications(response.data);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching notifications:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (data) {\r\n            fetchNotifications();\r\n        }\r\n    }, [data]);\r\n\r\n    useEffect(() => {\r\n        const pending = notifications.filter(notification => notification.status === 'pending');\r\n        const accepted = notifications.filter(notification => notification.status === 'accepted');\r\n        const rejected = notifications.filter(notification => notification.status === 'rejected');\r\n\r\n        setPendingNotifications(pending);\r\n        setAcceptedNotifications(accepted);\r\n        setRejectedNotifications(rejected);\r\n    }, [notifications]);\r\n\r\n    const handleAccept = async (notification) => {\r\n        try {\r\n            await axios.post('http://localhost:5000/acceptBooking', {\r\n                bookingId: notification._id,\r\n                userEmail: notification.userEmail\r\n            });\r\n            console.log('Booking accepted');\r\n\r\n            setPendingNotifications(prev => prev.filter(n => n._id !== notification._id));\r\n            setAcceptedNotifications(prev => [...prev, { ...notification, status: 'accepted' }]);\r\n\r\n            setClickedButtons(prevState => ({\r\n                ...prevState,\r\n                [notification._id]: 'accepted',\r\n            }));\r\n        } catch (error) {\r\n            console.error('Error accepting booking:', error);\r\n        }\r\n    };\r\n\r\n    const handleReject = async (notification) => {\r\n        try {\r\n            await axios.post('http://localhost:5000/rejectBooking', {\r\n                bookingId: notification._id,\r\n                userEmail: notification.userEmail\r\n            });\r\n            console.log('Booking rejected');\r\n\r\n            setPendingNotifications(prev => prev.filter(n => n._id !== notification._id));\r\n            setRejectedNotifications(prev => [...prev, { ...notification, status: 'rejected' }]);\r\n\r\n            setClickedButtons(prevState => ({\r\n                ...prevState,\r\n                [notification._id]: 'rejected',\r\n            }));\r\n        } catch (error) {\r\n            console.error('Error rejecting booking:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <nav className=\"navbar\">\r\n                <div className=\"logo\">\r\n                    <h1 style={{ fontFamily: \"Courier New', Courier, monospace\", fontSize: '27px' }}>\r\n                        SkillBridge\r\n                    </h1>\r\n                </div>\r\n                <div className=\"nav-right\">\r\n                    <ul className=\"nav-links\">\r\n                    <li><Link to=\"/AHome\" state={{ data: data }}>Home</Link></li>\r\n                    <li><Link to=\"/myworks\" state={{ data: data }}>My Works</Link></li>\r\n                        <li><Link to=\"/Ashorts\" state={{ data: data }}>Shorts</Link></li>\r\n                        <li><Link to=\"/Aservices\" state={{ data: data }}>Services</Link></li>\r\n                        <li>\r\n                            <Link to=\"/notifications\" state={{ data: data }} className=\"notification-link\">\r\n                                <FontAwesomeIcon icon={faBell} />\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                    <div className=\"profile\">\r\n                        <img\r\n                            src=\"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png\"\r\n                            alt=\"Profile\"\r\n                            className=\"profile-img\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            <div className=\"Notifications-container\">\r\n                <h2>Pending Notifications</h2>\r\n                <ul>\r\n                    {pendingNotifications.length > 0 ? (\r\n                        pendingNotifications.map((notification) => (\r\n                            <li key={notification._id} className=\"notification-item\">\r\n                                <p><strong>Hand Type:</strong> {notification.handType}</p>\r\n                                <p><strong>Number of Hands:</strong> {notification.numberOfHands}</p>\r\n                                <p><strong>Address:</strong> {notification.address}</p>\r\n                                <p><strong>Start Time:</strong> {new Date(notification.startTime).toLocaleString()}</p>\r\n                                <p><strong>End Time:</strong> {new Date(notification.endTime).toLocaleString()}</p>\r\n                                <p><strong>Total Price:</strong> ${notification.totalPrice}</p>\r\n                                <div className=\"notification-buttons\">\r\n                                    <button\r\n                                        className=\"accept-button\"\r\n                                        onClick={() => handleAccept(notification)}\r\n                                        disabled={clickedButtons[notification._id] === 'accepted'}\r\n                                    >\r\n                                        Accept\r\n                                    </button>\r\n                                    <button\r\n                                        className=\"reject-button\"\r\n                                        onClick={() => handleReject(notification)}\r\n                                        disabled={clickedButtons[notification._id] === 'rejected'}\r\n                                    >\r\n                                        Reject\r\n                                    </button>\r\n                                </div>\r\n                            </li>\r\n                        ))\r\n                    ) : (\r\n                        <p>No pending notifications</p>\r\n                    )}\r\n                </ul>\r\n\r\n                <h2>Accepted Notifications</h2>\r\n                <ul>\r\n                    {acceptedNotifications.length > 0 ? (\r\n                        acceptedNotifications.map((notification) => (\r\n                            <li key={notification._id} className=\"notification-item\">\r\n                                <p><strong>Hand Type:</strong> {notification.handType}</p>\r\n                                <p><strong>Number of Hands:</strong> {notification.numberOfHands}</p>\r\n                                <p><strong>Address:</strong> {notification.address}</p>\r\n                                <p><strong>Start Time:</strong> {new Date(notification.startTime).toLocaleString()}</p>\r\n                                <p><strong>End Time:</strong> {new Date(notification.endTime).toLocaleString()}</p>\r\n                                <p><strong>Total Price:</strong> ${notification.totalPrice}</p>\r\n                                <p>Status: Accepted</p>\r\n                            </li>\r\n                        ))\r\n                    ) : (\r\n                        <p>No accepted notifications</p>\r\n                    )}\r\n                </ul>\r\n\r\n                <h2>Rejected Notifications</h2>\r\n                <ul>\r\n                    {rejectedNotifications.length > 0 ? (\r\n                        rejectedNotifications.map((notification) => (\r\n                            <li key={notification._id} className=\"notification-item\">\r\n                                <p><strong>Hand Type:</strong> {notification.handType}</p>\r\n                                <p><strong>Number of Hands:</strong> {notification.numberOfHands}</p>\r\n                                <p><strong>Address:</strong> {notification.address}</p>\r\n                                <p><strong>Start Time:</strong> {new Date(notification.startTime).toLocaleString()}</p>\r\n                                <p><strong>End Time:</strong> {new Date(notification.endTime).toLocaleString()}</p>\r\n                                <p><strong>Total Price:</strong> ${notification.totalPrice}</p>\r\n                                <p>Status: Rejected</p>\r\n                            </li>\r\n                        ))\r\n                    ) : (\r\n                        <p>No rejected notifications</p>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Notifications;"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}