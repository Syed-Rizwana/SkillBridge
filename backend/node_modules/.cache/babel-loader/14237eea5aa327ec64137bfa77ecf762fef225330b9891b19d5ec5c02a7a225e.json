{"ast":null,"code":"var _jsxFileName = \"D:\\\\TechTalentConnect\\\\frontend\\\\src\\\\components\\\\Shorts\\\\shorts.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faThumbsUp, faThumbsDown, faComment, faUserCircle } from '@fortawesome/free-solid-svg-icons';\n// import './shorts.css';\n\n// const videoData = [\n//     { src: require(\"../videos/abcd.mp4\"), title: \"Project 2\", description: \"Description for Project 2\" },\n//     { src: require(\"../videos/abcd.mp4\"), title: \"Project 2\", description: \"Description for Project 2\" },\n//     { src: require(\"../videos/abcd.mp4\"), title: \"Project 2\", description: \"Description for Project 2\" },\n//     { src: require(\"../videos/abcd.mp4\"), title: \"Project 4\", description: \"Description for Project 4\" },\n//     { src: require(\"../videos/abcd.mp4\"), title: \"Project 3\", description: \"Description for Project 3\" },\n//     { src: require(\"../videos/abcd.mp4\"), title: \"Project 1\", description: \"Description for Project 1\" },\n//     { src: require(\"../videos/abcd.mp4\"), title: \"Project 2 (Duplicate)\", description: \"Another Description for Project 2\" },\n//     { src: require(\"../videos/abcd.mp4\"), title: \"Project 2\", description: \"Description for Project 2\" },\n//     { src: require(\"../videos/abcd.mp4\"), title: \"Project 4 (Duplicate)\", description: \"Another Description for Project 4\" },\n// ];\n\n// const Shorts = () => {\n//     const [reactions, setReactions] = useState(videoData.map(() => ({ liked: false, disliked: false })));\n//     const [descriptionVisible, setDescriptionVisible] = useState(videoData.map(() => false));\n//     const [commentVisible, setCommentVisible] = useState(videoData.map(() => false));\n\n//     const handleReaction = (index, reactionType) => {\n//         setReactions((prevReactions) => {\n//             const newReactions = [...prevReactions];\n\n//             // If not already reacted, update the reaction type\n//             if (!newReactions[index][reactionType]) {\n//                 newReactions[index][reactionType] = true;\n\n//                 // Reset the opposite reaction to false\n//                 newReactions[index][reactionType === 'liked' ? 'disliked' : 'liked'] = false;\n//             }\n\n//             return newReactions;\n//         });\n//     };\n\n//     const toggleDescription = (index) => {\n//         setDescriptionVisible((prevVisibility) => {\n//             const newVisibility = [...prevVisibility];\n//             newVisibility[index] = !newVisibility[index];\n//             return newVisibility;\n//         });\n//     };\n\n//     const toggleComment = (index) => {\n//         setCommentVisible((prevVisibility) => {\n//             const newVisibility = [...prevVisibility];\n//             newVisibility[index] = !newVisibility[index];\n//             return newVisibility;\n//         });\n//     };\n\n//     return (\n//         <div className=\"videos-container\">\n//             {videoData.map((video, index) => (\n//                 <div key={index} className=\"video-card\">\n//                     <video controls>\n//                         <source src={video.src} type=\"video/mp4\" />\n//                         Your browser does not support the video tag.\n//                     </video>\n//                     <div className=\"interaction\">\n//                         <button>\n//                             <FontAwesomeIcon icon={faUserCircle} />\n//                         </button>\n//                         <button\n//                             onClick={() => handleReaction(index, 'liked')}\n//                             disabled={reactions[index].liked} // Disable after like is clicked\n//                         >\n//                             <FontAwesomeIcon icon={faThumbsUp} />\n//                             <p className=\"ptag\">{reactions[index].liked ? 1 : 0}</p>\n//                         </button>\n//                         <button\n//                             onClick={() => handleReaction(index, 'disliked')}\n//                             disabled={reactions[index].disliked} // Disable after dislike is clicked\n//                         >\n//                             <FontAwesomeIcon icon={faThumbsDown} />\n//                             <p className=\"ptag\">{reactions[index].disliked ? 1 : 0}</p>\n//                         </button>\n//                         <button onClick={() => toggleComment(index)}>\n//                             <FontAwesomeIcon icon={faComment} />\n//                         </button>\n//                     </div>\n\n//                     {descriptionVisible[index] && <p className=\"video-description\">{video.description}</p>}\n//                     {commentVisible[index] && (\n//                         <div className=\"comment-section\">\n//                             <textarea placeholder=\"Write a comment...\" className=\"comment-input\"></textarea>\n//                             <button className=\"submit-comment\">Submit</button>\n//                         </div>\n//                     )}\n//                 </div>\n//             ))}\n//         </div>\n//     );\n// };\n\n// export default Shorts;\n\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faThumbsUp, faThumbsDown, faComment, faUserCircle } from '@fortawesome/free-solid-svg-icons';\nimport './S.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst S = () => {\n  _s();\n  const [videoData, setVideoData] = useState([]);\n  const [reactions, setReactions] = useState([]);\n  const [descriptionVisible, setDescriptionVisible] = useState([]);\n  const [commentVisible, setCommentVisible] = useState([]);\n  useEffect(() => {\n    // Fetch video data from the backend\n    const fetchVideoData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/get_videos');\n        const videos = response.data; // This should be an array of video file names\n\n        setVideoData(videos);\n        setReactions(videos.map(() => ({\n          liked: false,\n          disliked: false\n        })));\n        setDescriptionVisible(videos.map(() => false));\n        setCommentVisible(videos.map(() => false));\n      } catch (error) {\n        console.error('Error fetching video data:', error);\n      }\n    };\n    fetchVideoData();\n  }, []);\n  const handleReaction = (index, reactionType) => {\n    setReactions(prevReactions => {\n      const newReactions = [...prevReactions];\n      if (!newReactions[index][reactionType]) {\n        newReactions[index][reactionType] = true;\n        newReactions[index][reactionType === 'liked' ? 'disliked' : 'liked'] = false;\n      }\n      return newReactions;\n    });\n  };\n  const toggleDescription = index => {\n    setDescriptionVisible(prevVisibility => {\n      const newVisibility = [...prevVisibility];\n      newVisibility[index] = !newVisibility[index];\n      return newVisibility;\n    });\n  };\n  const toggleComment = index => {\n    setCommentVisible(prevVisibility => {\n      const newVisibility = [...prevVisibility];\n      newVisibility[index] = !newVisibility[index];\n      return newVisibility;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"videos-container\",\n    children: videoData.map((videoFileName, index) => {\n      var _reactions$index, _reactions$index2, _reactions$index3, _reactions$index4;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"single-video\",\n          children: /*#__PURE__*/_jsxDEV(\"video\", {\n            controls: true,\n            src: `http://localhost:5000/uploads/${videoFileName}`,\n            style: {\n              width: '400px',\n              margin: '10px',\n              height: 'auto'\n            },\n            children: \"Your browser does not support the video tag.\"\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"interaction\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faUserCircle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleReaction(index, 'liked'),\n            disabled: (_reactions$index = reactions[index]) === null || _reactions$index === void 0 ? void 0 : _reactions$index.liked,\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faThumbsUp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"ptag\",\n              children: (_reactions$index2 = reactions[index]) !== null && _reactions$index2 !== void 0 && _reactions$index2.liked ? 1 : 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleReaction(index, 'disliked'),\n            disabled: (_reactions$index3 = reactions[index]) === null || _reactions$index3 === void 0 ? void 0 : _reactions$index3.disliked,\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faThumbsDown\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"ptag\",\n              children: (_reactions$index4 = reactions[index]) !== null && _reactions$index4 !== void 0 && _reactions$index4.disliked ? 1 : 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => toggleComment(index),\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faComment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this), descriptionVisible[index] && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"video-description\",\n          children: \"Video description here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 51\n        }, this), commentVisible[index] && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Write a comment...\",\n            className: \"comment-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"submit-comment\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 9\n  }, this);\n};\n_s(S, \"XeWuH878U3vW85ALpd+oxKCKhT0=\");\n_c = S;\nexport default S;\nvar _c;\n$RefreshReg$(_c, \"S\");","map":{"version":3,"names":["React","useState","useEffect","FontAwesomeIcon","faThumbsUp","faThumbsDown","faComment","faUserCircle","axios","jsxDEV","_jsxDEV","S","_s","videoData","setVideoData","reactions","setReactions","descriptionVisible","setDescriptionVisible","commentVisible","setCommentVisible","fetchVideoData","response","get","videos","data","map","liked","disliked","error","console","handleReaction","index","reactionType","prevReactions","newReactions","toggleDescription","prevVisibility","newVisibility","toggleComment","className","children","videoFileName","_reactions$index","_reactions$index2","_reactions$index3","_reactions$index4","controls","src","style","width","margin","height","fileName","_jsxFileName","lineNumber","columnNumber","icon","onClick","disabled","placeholder","_c","$RefreshReg$"],"sources":["D:/TechTalentConnect/frontend/src/components/Shorts/shorts.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n// import { faThumbsUp, faThumbsDown, faComment, faUserCircle } from '@fortawesome/free-solid-svg-icons';\r\n// import './shorts.css';\r\n\r\n// const videoData = [\r\n//     { src: require(\"../videos/abcd.mp4\"), title: \"Project 2\", description: \"Description for Project 2\" },\r\n//     { src: require(\"../videos/abcd.mp4\"), title: \"Project 2\", description: \"Description for Project 2\" },\r\n//     { src: require(\"../videos/abcd.mp4\"), title: \"Project 2\", description: \"Description for Project 2\" },\r\n//     { src: require(\"../videos/abcd.mp4\"), title: \"Project 4\", description: \"Description for Project 4\" },\r\n//     { src: require(\"../videos/abcd.mp4\"), title: \"Project 3\", description: \"Description for Project 3\" },\r\n//     { src: require(\"../videos/abcd.mp4\"), title: \"Project 1\", description: \"Description for Project 1\" },\r\n//     { src: require(\"../videos/abcd.mp4\"), title: \"Project 2 (Duplicate)\", description: \"Another Description for Project 2\" },\r\n//     { src: require(\"../videos/abcd.mp4\"), title: \"Project 2\", description: \"Description for Project 2\" },\r\n//     { src: require(\"../videos/abcd.mp4\"), title: \"Project 4 (Duplicate)\", description: \"Another Description for Project 4\" },\r\n// ];\r\n\r\n// const Shorts = () => {\r\n//     const [reactions, setReactions] = useState(videoData.map(() => ({ liked: false, disliked: false })));\r\n//     const [descriptionVisible, setDescriptionVisible] = useState(videoData.map(() => false));\r\n//     const [commentVisible, setCommentVisible] = useState(videoData.map(() => false));\r\n\r\n//     const handleReaction = (index, reactionType) => {\r\n//         setReactions((prevReactions) => {\r\n//             const newReactions = [...prevReactions];\r\n\r\n//             // If not already reacted, update the reaction type\r\n//             if (!newReactions[index][reactionType]) {\r\n//                 newReactions[index][reactionType] = true;\r\n\r\n//                 // Reset the opposite reaction to false\r\n//                 newReactions[index][reactionType === 'liked' ? 'disliked' : 'liked'] = false;\r\n//             }\r\n\r\n//             return newReactions;\r\n//         });\r\n//     };\r\n\r\n//     const toggleDescription = (index) => {\r\n//         setDescriptionVisible((prevVisibility) => {\r\n//             const newVisibility = [...prevVisibility];\r\n//             newVisibility[index] = !newVisibility[index];\r\n//             return newVisibility;\r\n//         });\r\n//     };\r\n\r\n//     const toggleComment = (index) => {\r\n//         setCommentVisible((prevVisibility) => {\r\n//             const newVisibility = [...prevVisibility];\r\n//             newVisibility[index] = !newVisibility[index];\r\n//             return newVisibility;\r\n//         });\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"videos-container\">\r\n//             {videoData.map((video, index) => (\r\n//                 <div key={index} className=\"video-card\">\r\n//                     <video controls>\r\n//                         <source src={video.src} type=\"video/mp4\" />\r\n//                         Your browser does not support the video tag.\r\n//                     </video>\r\n//                     <div className=\"interaction\">\r\n//                         <button>\r\n//                             <FontAwesomeIcon icon={faUserCircle} />\r\n//                         </button>\r\n//                         <button\r\n//                             onClick={() => handleReaction(index, 'liked')}\r\n//                             disabled={reactions[index].liked} // Disable after like is clicked\r\n//                         >\r\n//                             <FontAwesomeIcon icon={faThumbsUp} />\r\n//                             <p className=\"ptag\">{reactions[index].liked ? 1 : 0}</p>\r\n//                         </button>\r\n//                         <button\r\n//                             onClick={() => handleReaction(index, 'disliked')}\r\n//                             disabled={reactions[index].disliked} // Disable after dislike is clicked\r\n//                         >\r\n//                             <FontAwesomeIcon icon={faThumbsDown} />\r\n//                             <p className=\"ptag\">{reactions[index].disliked ? 1 : 0}</p>\r\n//                         </button>\r\n//                         <button onClick={() => toggleComment(index)}>\r\n//                             <FontAwesomeIcon icon={faComment} />\r\n//                         </button>\r\n//                     </div>\r\n\r\n//                     {descriptionVisible[index] && <p className=\"video-description\">{video.description}</p>}\r\n//                     {commentVisible[index] && (\r\n//                         <div className=\"comment-section\">\r\n//                             <textarea placeholder=\"Write a comment...\" className=\"comment-input\"></textarea>\r\n//                             <button className=\"submit-comment\">Submit</button>\r\n//                         </div>\r\n//                     )}\r\n//                 </div>\r\n//             ))}\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Shorts;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faThumbsUp, faThumbsDown, faComment, faUserCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport './S.css';\r\nimport axios from 'axios';\r\n\r\nconst S = () => {\r\n    const [videoData, setVideoData] = useState([]);\r\n    const [reactions, setReactions] = useState([]);\r\n    const [descriptionVisible, setDescriptionVisible] = useState([]);\r\n    const [commentVisible, setCommentVisible] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // Fetch video data from the backend\r\n        const fetchVideoData = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:5000/get_videos');\r\n                const videos = response.data; // This should be an array of video file names\r\n\r\n                setVideoData(videos);\r\n                setReactions(videos.map(() => ({ liked: false, disliked: false })));\r\n                setDescriptionVisible(videos.map(() => false));\r\n                setCommentVisible(videos.map(() => false));\r\n            } catch (error) {\r\n                console.error('Error fetching video data:', error);\r\n            }\r\n        };\r\n\r\n        fetchVideoData();\r\n    }, []);\r\n\r\n    const handleReaction = (index, reactionType) => {\r\n        setReactions((prevReactions) => {\r\n            const newReactions = [...prevReactions];\r\n            if (!newReactions[index][reactionType]) {\r\n                newReactions[index][reactionType] = true;\r\n                newReactions[index][reactionType === 'liked' ? 'disliked' : 'liked'] = false;\r\n            }\r\n            return newReactions;\r\n        });\r\n    };\r\n\r\n    const toggleDescription = (index) => {\r\n        setDescriptionVisible((prevVisibility) => {\r\n            const newVisibility = [...prevVisibility];\r\n            newVisibility[index] = !newVisibility[index];\r\n            return newVisibility;\r\n        });\r\n    };\r\n\r\n    const toggleComment = (index) => {\r\n        setCommentVisible((prevVisibility) => {\r\n            const newVisibility = [...prevVisibility];\r\n            newVisibility[index] = !newVisibility[index];\r\n            return newVisibility;\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"videos-container\">\r\n            {videoData.map((videoFileName, index) => (\r\n                <div key={index} className=\"video-card\">\r\n                    <div className=\"single-video\">\r\n                        <video \r\n                            key={index} \r\n                            controls \r\n                            src={`http://localhost:5000/uploads/${videoFileName}`} \r\n                            style={{ width: '400px', margin: '10px', height: 'auto' }}\r\n                        >\r\n                            Your browser does not support the video tag.\r\n                        </video>\r\n                    </div>\r\n\r\n                    <div className=\"interaction\">\r\n                        <button>\r\n                            <FontAwesomeIcon icon={faUserCircle} />\r\n                        </button>\r\n                        <button\r\n                            onClick={() => handleReaction(index, 'liked')}\r\n                            disabled={reactions[index]?.liked}\r\n                        >\r\n                            <FontAwesomeIcon icon={faThumbsUp} />\r\n                            <p className=\"ptag\">{reactions[index]?.liked ? 1 : 0}</p>\r\n                        </button>\r\n                        <button\r\n                            onClick={() => handleReaction(index, 'disliked')}\r\n                            disabled={reactions[index]?.disliked}\r\n                        >\r\n                            <FontAwesomeIcon icon={faThumbsDown} />\r\n                            <p className=\"ptag\">{reactions[index]?.disliked ? 1 : 0}</p>\r\n                        </button>\r\n                        <button onClick={() => toggleComment(index)}>\r\n                            <FontAwesomeIcon icon={faComment} />\r\n                        </button>\r\n                    </div>\r\n\r\n                    {descriptionVisible[index] && <p className=\"video-description\">Video description here</p>}\r\n                    {commentVisible[index] && (\r\n                        <div className=\"comment-section\">\r\n                            <textarea placeholder=\"Write a comment...\" className=\"comment-input\"></textarea>\r\n                            <button className=\"submit-comment\">Submit</button>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default S;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}