{"ast":null,"code":"var _jsxFileName = \"D:\\\\TechTalentConnect\\\\frontend\\\\src\\\\components\\\\loginPage\\\\login.js\",\n  _s = $RefreshSig$();\n// import './login.css';\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n\n// const Login = () => {\n//     const [message, setMessage] = useState('');\n//     const [email, setEmail] = useState('');\n//     const [password, setPassword] = useState('');\n//     const [loginType, setLoginType] = useState('user'); // Track login type\n//     const navigate = useNavigate();\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n\n//         // Prepare data for the POST request\n//         const data = {\n//             email,\n//             password,\n//         };\n//         console.log(data);\n\n//         // Determine the login route based on the selected login type\n//         const route = loginType === 'user' ? '/ulogin' : '/Plogin';\n\n//         try {\n//             const response = await axios.post(`http://localhost:5000${route}`, data);\n//             console.log(response.data); // Handle the response\n//             setMessage('Login successful');\n//             if (route === '/ulogin') {\n//                 setTimeout(() => {\n//                     setMessage('');\n//                     setEmail('');\n//                     setPassword('');\n//                     navigate('/Home');\n//                 }, 2000);\n//             }\n//             else {\n//                 setTimeout(() => {\n//                     setMessage('');\n//                     setEmail('');\n//                     setPassword('');\n//                     navigate('/AHome', { state: { data:email } });\n//                 }, 2000);\n//             }\n//         } catch (error) {\n//             console.error('There was an error logging in!', error);\n//         }\n//     };\n\n//     return (\n//         <>\n//             <div className=\"body\">\n//                 <div className=\"wrapper\">\n//                     {message && <h2 className='msg'>{message}</h2>}\n//                     <h1 className=\"title\">Login</h1>\n\n//                     {/* Dropdown to select User Login or Professional Login */}\n//                     <div className=\"login-type\">\n//                         <label htmlFor=\"loginType\">Login Type:</label>\n//                         <select\n//                             id=\"loginType\"\n//                             value={loginType}\n//                             onChange={(e) => setLoginType(e.target.value)}\n//                         >\n//                             <option value=\"user\">User Login</option>\n//                             <option value=\"professional\">Professional Login</option>\n//                         </select>\n//                     </div>\n\n//                     <form onSubmit={handleSubmit}>\n//                         <div className=\"info\">\n//                             <div className=\"input-box\">\n//                                 <label>Email Address</label>\n//                                 <input\n//                                     type=\"email\"\n//                                     name=\"email\"\n//                                     placeholder=\"Enter Email Address\"\n//                                     value={email}\n//                                     onChange={(e) => setEmail(e.target.value)}\n//                                     required\n//                                 />\n//                             </div>\n//                             <div className=\"input-box\">\n//                                 <label>Password</label>\n//                                 <input\n//                                     type=\"password\"\n//                                     name=\"password\"\n//                                     placeholder=\"Enter Password\"\n//                                     value={password}\n//                                     onChange={(e) => setPassword(e.target.value)}\n//                                     required\n//                                 />\n//                             </div>\n//                         </div>\n//                         <div className=\"btn\">\n//                             <input type=\"submit\" value=\"Login\" />\n//                         </div>\n//                         <p className='new'>Don't have an account? <a href=\"/UserReg\" className='acc'>Create Account</a></p>\n//                     </form>\n//                 </div>\n//             </div>\n//         </>\n//     );\n// }\n\n// export default Login;\n\nimport './login.css';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loginType, setLoginType] = useState('user');\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const data = {\n      email,\n      password\n    };\n    const route = loginType === 'user' ? '/ulogin' : '/Plogin';\n    try {\n      const response = await axios.post(`http://localhost:5000${route}`, data);\n      setMessage('Login successful');\n      if (route === '/ulogin') {\n        setTimeout(() => {\n          setMessage('');\n          navigate('/Home');\n        }, 2000);\n      } else {\n        setTimeout(() => {\n          setMessage('');\n          navigate('/AHome', {\n            state: {\n              data: email\n            }\n          });\n        }, 2000);\n      }\n    } catch (error) {\n      setMessage('Invalid Credentials');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container1\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper1\",\n      children: [message && /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"msg\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overlay\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: loginType === 'user' ? 'selected' : '',\n            onClick: () => setLoginType('user'),\n            children: \"User Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: loginType === 'professional' ? 'selected' : '',\n            onClick: () => setLoginType('professional'),\n            children: \"Professional Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            placeholder: \"Enter Email Address\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            placeholder: \"Enter Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"new\",\n          children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/UserReg\",\n            className: \"acc\",\n            children: \"Create Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 48\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"8l+VGoFrl1nwpQRzQqHSQj7eefY=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","Login","_s","message","setMessage","email","setEmail","password","setPassword","loginType","setLoginType","navigate","handleSubmit","e","preventDefault","data","route","response","post","setTimeout","state","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onClick","type","name","placeholder","value","onChange","target","required","href","_c","$RefreshReg$"],"sources":["D:/TechTalentConnect/frontend/src/components/loginPage/login.js"],"sourcesContent":["// import './login.css';\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// const Login = () => {\r\n//     const [message, setMessage] = useState('');\r\n//     const [email, setEmail] = useState('');\r\n//     const [password, setPassword] = useState('');\r\n//     const [loginType, setLoginType] = useState('user'); // Track login type\r\n//     const navigate = useNavigate();\r\n\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n\r\n//         // Prepare data for the POST request\r\n//         const data = {\r\n//             email,\r\n//             password,\r\n//         };\r\n//         console.log(data);\r\n\r\n//         // Determine the login route based on the selected login type\r\n//         const route = loginType === 'user' ? '/ulogin' : '/Plogin';\r\n\r\n//         try {\r\n//             const response = await axios.post(`http://localhost:5000${route}`, data);\r\n//             console.log(response.data); // Handle the response\r\n//             setMessage('Login successful');\r\n//             if (route === '/ulogin') {\r\n//                 setTimeout(() => {\r\n//                     setMessage('');\r\n//                     setEmail('');\r\n//                     setPassword('');\r\n//                     navigate('/Home');\r\n//                 }, 2000);\r\n//             }\r\n//             else {\r\n//                 setTimeout(() => {\r\n//                     setMessage('');\r\n//                     setEmail('');\r\n//                     setPassword('');\r\n//                     navigate('/AHome', { state: { data:email } });\r\n//                 }, 2000);\r\n//             }\r\n//         } catch (error) {\r\n//             console.error('There was an error logging in!', error);\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <>\r\n//             <div className=\"body\">\r\n//                 <div className=\"wrapper\">\r\n//                     {message && <h2 className='msg'>{message}</h2>}\r\n//                     <h1 className=\"title\">Login</h1>\r\n\r\n//                     {/* Dropdown to select User Login or Professional Login */}\r\n//                     <div className=\"login-type\">\r\n//                         <label htmlFor=\"loginType\">Login Type:</label>\r\n//                         <select\r\n//                             id=\"loginType\"\r\n//                             value={loginType}\r\n//                             onChange={(e) => setLoginType(e.target.value)}\r\n//                         >\r\n//                             <option value=\"user\">User Login</option>\r\n//                             <option value=\"professional\">Professional Login</option>\r\n//                         </select>\r\n//                     </div>\r\n\r\n//                     <form onSubmit={handleSubmit}>\r\n//                         <div className=\"info\">\r\n//                             <div className=\"input-box\">\r\n//                                 <label>Email Address</label>\r\n//                                 <input\r\n//                                     type=\"email\"\r\n//                                     name=\"email\"\r\n//                                     placeholder=\"Enter Email Address\"\r\n//                                     value={email}\r\n//                                     onChange={(e) => setEmail(e.target.value)}\r\n//                                     required\r\n//                                 />\r\n//                             </div>\r\n//                             <div className=\"input-box\">\r\n//                                 <label>Password</label>\r\n//                                 <input\r\n//                                     type=\"password\"\r\n//                                     name=\"password\"\r\n//                                     placeholder=\"Enter Password\"\r\n//                                     value={password}\r\n//                                     onChange={(e) => setPassword(e.target.value)}\r\n//                                     required\r\n//                                 />\r\n//                             </div>\r\n//                         </div>\r\n//                         <div className=\"btn\">\r\n//                             <input type=\"submit\" value=\"Login\" />\r\n//                         </div>\r\n//                         <p className='new'>Don't have an account? <a href=\"/UserReg\" className='acc'>Create Account</a></p>\r\n//                     </form>\r\n//                 </div>\r\n//             </div>\r\n//         </>\r\n//     );\r\n// }\r\n\r\n// export default Login;\r\n\r\nimport './login.css';\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n    const [message, setMessage] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [loginType, setLoginType] = useState('user');\r\n    const navigate = useNavigate();\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const data = { email, password };\r\n        const route = loginType === 'user' ? '/ulogin' : '/Plogin';\r\n\r\n        try {\r\n            const response = await axios.post(`http://localhost:5000${route}`, data);\r\n            setMessage('Login successful');\r\n            if (route === '/ulogin') {\r\n                setTimeout(() => {\r\n                    setMessage('');\r\n                    navigate('/Home');\r\n                }, 2000);\r\n            } else {\r\n                setTimeout(() => {\r\n                    setMessage('');\r\n                    navigate('/AHome', { state: { data: email } });\r\n                }, 2000);\r\n            }\r\n        } catch (error) {\r\n            setMessage('Invalid Credentials');\r\n        }\r\n    };\r\n\r\n    return (\r\n\r\n        <div className=\"container1\">\r\n            <div className=\"wrapper1\">\r\n                {message && <h2 className=\"msg\">{message}</h2>}\r\n                <h1 className=\"title\">Login</h1>\r\n\r\n                <form onSubmit={handleSubmit}>\r\n\r\n                    <div className=\"overlay\">\r\n                        <button\r\n                            className={loginType === 'user' ? 'selected' : ''}\r\n                            onClick={() => setLoginType('user')}\r\n                        >\r\n                            User Login\r\n                        </button>\r\n                        <button\r\n                            className={loginType === 'professional' ? 'selected' : ''}\r\n                            onClick={() => setLoginType('professional')}\r\n                        >\r\n                            Professional Login\r\n                        </button>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"input-box\">\r\n                        <label>Email Address</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            placeholder=\"Enter Email Address\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-box\">\r\n                        <label>Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            placeholder=\"Enter Password\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"btn\">\r\n                        <input type=\"submit\" value=\"Login\" />\r\n                    </div>\r\n                    <p className=\"new\">\r\n                        Don't have an account? <a href=\"/UserReg\" className=\"acc\">Create Account</a>\r\n                    </p>\r\n                </form>\r\n            </div>\r\n\r\n            {/* Image Container with Buttons */}\r\n            <div className=\"image-container\">\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}