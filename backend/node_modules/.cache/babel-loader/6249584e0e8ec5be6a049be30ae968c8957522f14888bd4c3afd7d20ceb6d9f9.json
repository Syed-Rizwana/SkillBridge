{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import { faThumbsUp, faThumbsDown, faComment, faUserCircle, faPaperPlane } from '@fortawesome/free-solid-svg-icons';\n// import { Link, useLocation } from 'react-router-dom';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faBell } from '@fortawesome/free-solid-svg-icons';\n// import './AShorts.css';\n\n// const AShorts = () => {\n//     const [videoData, setVideoData] = useState([]);\n//     const [reactions, setReactions] = useState([]);\n//     const [descriptionVisible, setDescriptionVisible] = useState([]);\n//     const [commentVisible, setCommentVisible] = useState([]);\n//     const [comments, setComments] = useState({});\n//     const [isNavActive, setIsNavActive] = useState(false);\n//     const location = useLocation();\n//     const { data } = location.state || {};\n//     useEffect(() => {\n//         const fetchVideoData = () => {\n//             const videos = ['video1.mp4', 'video2.mp4']; // Replace with your video data\n//             setVideoData(videos);\n//             setReactions(videos.map(() => ({ liked: false, disliked: false })));\n//             setDescriptionVisible(videos.map(() => false));\n//             setCommentVisible(videos.map(() => false));\n\n//             const storedComments = {};\n//             videos.forEach(video => {\n//                 const videoComments = JSON.parse(localStorage.getItem(`comments-${video}`)) || [];\n//                 storedComments[video] = videoComments;\n//             });\n//             setComments(storedComments);\n//         };\n\n//         fetchVideoData();\n//     }, []);\n\n//     const handleReaction = (index, reactionType) => {\n//         setReactions((prevReactions) => {\n//             const newReactions = [...prevReactions];\n//             if (!newReactions[index][reactionType]) {\n//                 newReactions[index][reactionType] = true;\n//                 newReactions[index][reactionType === 'liked' ? 'disliked' : 'liked'] = false;\n//             }\n//             return newReactions;\n//         });\n//     };\n\n//     const toggleDescription = (index) => {\n//         setDescriptionVisible((prevVisibility) => {\n//             const newVisibility = [...prevVisibility];\n//             newVisibility[index] = !newVisibility[index];\n//             return newVisibility;\n//         });\n//     };\n\n//     const toggleComment = (index) => {\n//         setCommentVisible((prevVisibility) => {\n//             const newVisibility = [...prevVisibility];\n//             newVisibility[index] = !newVisibility[index];\n//             return newVisibility;\n//         });\n//     };\n\n//     const handleCommentSubmit = (index, videoId) => {\n//         const commentInput = document.querySelector(`#comment-input-${index}`);\n//         const commentText = commentInput.value;\n\n//         if (commentText.trim()) {\n//             const newComments = { ...comments };\n//             if (!newComments[videoId]) {\n//                 newComments[videoId] = [];\n//             }\n//             newComments[videoId].push(commentText);\n\n//             localStorage.setItem(`comments-${videoId}`, JSON.stringify(newComments[videoId]));\n\n//             setComments(newComments);\n//             commentInput.value = '';\n//         }\n//     };\n\n//     const toggleNav = () => {\n//         setIsNavActive(!isNavActive);\n//     };\n\n//     return (\n//         <div className=\"home\">\n//             <nav className=\"navbar\">\n//                 <div className=\"logo\">\n//                     <h1 style={{ fontFamily: \"Courier New', Courier, monospace\", fontSize: '27px' }}>\n//                         SkillBridge\n//                     </h1>\n//                 </div>\n//                 <div className=\"nav-right\">\n//                     <ul className={`nav-links ${isNavActive ? 'active' : ''}`} id=\"navLinks\">\n//                     <li><Link to=\"/AHome\" state={{ data: data }}>Home</Link></li>\n//                     <li><Link to=\"/myworks\" state={{ data: data }}>My Works</Link></li>\n//                         <li><Link to=\"/Ashorts\" state={{ data: data }}>Shorts</Link></li>\n//                         <li><Link to=\"/Aservices\" state={{ data: data }}>Services</Link></li>\n//                         <li>\n//                             <Link to=\"/notifications\" state={{ data: data }} className=\"notification-link\">\n//                                 <FontAwesomeIcon icon={faBell} />\n//                             </Link>\n//                         </li>\n//                     </ul>\n//                     <div className=\"profile\">\n//                         <img\n//                             src=\"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png\"\n//                             alt=\"Profile\"\n//                             className=\"profile-img\"\n//                         />\n//                     </div>\n//                     <div className=\"hamburger\" id=\"hamburger\" onClick={toggleNav}>\n//                         <span className=\"bar\"></span>\n//                         <span className=\"bar\"></span>\n//                         <span className=\"bar\"></span>\n//                     </div>\n//                 </div>\n//             </nav>\n//             <div className=\"videos-container\">\n//                 {videoData.map((videoFileName, index) => (\n//                     <div key={index} className=\"video-card\">\n//                         <div className=\"single-video\">\n//                             <video\n//                                 key={index}\n//                                 controls\n//                                 src={`http://localhost:5000/uploads/${videoFileName}`}\n//                                 style={{ width: '400px', margin: '10px', height: 'auto' }}\n//                             >\n//                                 Your browser does not support the video tag.\n//                             </video>\n//                         </div>\n\n//                         <div className=\"interaction\">\n//                             <button>\n//                                 <FontAwesomeIcon icon={faUserCircle} />\n//                             </button>\n//                             <button\n//                                 onClick={() => handleReaction(index, 'liked')}\n//                                 disabled={reactions[index]?.liked}\n//                             >\n//                                 <FontAwesomeIcon icon={faThumbsUp} />\n//                                 <p className=\"ptag\">{reactions[index]?.liked ? 1 : 0}</p>\n//                             </button>\n//                             <button\n//                                 onClick={() => handleReaction(index, 'disliked')}\n//                                 disabled={reactions[index]?.disliked}\n//                             >\n//                                 <FontAwesomeIcon icon={faThumbsDown} />\n//                                 <p className=\"ptag\">{reactions[index]?.disliked ? 1 : 0}</p>\n//                             </button>\n//                             <button onClick={() => toggleComment(index)}>\n//                                 <FontAwesomeIcon icon={faComment} />\n//                             </button>\n//                         </div>\n\n//                         {descriptionVisible[index] && <p className=\"video-description\">Video description here</p>}\n\n//                         {commentVisible[index] && (\n//                             <div className=\"comment-section\">\n//                                 <div className=\"comment-input-container\">\n//                                     <textarea\n//                                         id={`comment-input-${index}`}\n//                                         placeholder=\"Write a comment...\"\n//                                         className=\"comment-input\"\n//                                     ></textarea>\n//                                     <button\n//                                         className=\"submit-comment\"\n//                                         onClick={() => handleCommentSubmit(index, videoFileName)}\n//                                     >\n//                                         <FontAwesomeIcon icon={faPaperPlane} />\n//                                     </button>\n//                                 </div>\n//                                 <div className=\"comments-list\">\n//                                     {comments[videoFileName]?.map((comment, idx) => (\n//                                         <p key={idx}>{comment}</p>\n//                                     ))}\n//                                 </div>\n//                             </div>\n//                         )}\n//                     </div>\n//                 ))}\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default AShorts;","map":{"version":3,"names":[],"sources":["D:/TechTalentConnect/frontend/src/components/AShorts/AShorts.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { faThumbsUp, faThumbsDown, faComment, faUserCircle, faPaperPlane } from '@fortawesome/free-solid-svg-icons';\r\n// import { Link, useLocation } from 'react-router-dom';\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n// import { faBell } from '@fortawesome/free-solid-svg-icons';\r\n// import './AShorts.css';\r\n\r\n// const AShorts = () => {\r\n//     const [videoData, setVideoData] = useState([]);\r\n//     const [reactions, setReactions] = useState([]);\r\n//     const [descriptionVisible, setDescriptionVisible] = useState([]);\r\n//     const [commentVisible, setCommentVisible] = useState([]);\r\n//     const [comments, setComments] = useState({});\r\n//     const [isNavActive, setIsNavActive] = useState(false);\r\n//     const location = useLocation();\r\n//     const { data } = location.state || {};\r\n//     useEffect(() => {\r\n//         const fetchVideoData = () => {\r\n//             const videos = ['video1.mp4', 'video2.mp4']; // Replace with your video data\r\n//             setVideoData(videos);\r\n//             setReactions(videos.map(() => ({ liked: false, disliked: false })));\r\n//             setDescriptionVisible(videos.map(() => false));\r\n//             setCommentVisible(videos.map(() => false));\r\n\r\n//             const storedComments = {};\r\n//             videos.forEach(video => {\r\n//                 const videoComments = JSON.parse(localStorage.getItem(`comments-${video}`)) || [];\r\n//                 storedComments[video] = videoComments;\r\n//             });\r\n//             setComments(storedComments);\r\n//         };\r\n\r\n//         fetchVideoData();\r\n//     }, []);\r\n\r\n//     const handleReaction = (index, reactionType) => {\r\n//         setReactions((prevReactions) => {\r\n//             const newReactions = [...prevReactions];\r\n//             if (!newReactions[index][reactionType]) {\r\n//                 newReactions[index][reactionType] = true;\r\n//                 newReactions[index][reactionType === 'liked' ? 'disliked' : 'liked'] = false;\r\n//             }\r\n//             return newReactions;\r\n//         });\r\n//     };\r\n\r\n//     const toggleDescription = (index) => {\r\n//         setDescriptionVisible((prevVisibility) => {\r\n//             const newVisibility = [...prevVisibility];\r\n//             newVisibility[index] = !newVisibility[index];\r\n//             return newVisibility;\r\n//         });\r\n//     };\r\n\r\n//     const toggleComment = (index) => {\r\n//         setCommentVisible((prevVisibility) => {\r\n//             const newVisibility = [...prevVisibility];\r\n//             newVisibility[index] = !newVisibility[index];\r\n//             return newVisibility;\r\n//         });\r\n//     };\r\n\r\n//     const handleCommentSubmit = (index, videoId) => {\r\n//         const commentInput = document.querySelector(`#comment-input-${index}`);\r\n//         const commentText = commentInput.value;\r\n\r\n//         if (commentText.trim()) {\r\n//             const newComments = { ...comments };\r\n//             if (!newComments[videoId]) {\r\n//                 newComments[videoId] = [];\r\n//             }\r\n//             newComments[videoId].push(commentText);\r\n\r\n//             localStorage.setItem(`comments-${videoId}`, JSON.stringify(newComments[videoId]));\r\n\r\n//             setComments(newComments);\r\n//             commentInput.value = '';\r\n//         }\r\n//     };\r\n\r\n//     const toggleNav = () => {\r\n//         setIsNavActive(!isNavActive);\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"home\">\r\n//             <nav className=\"navbar\">\r\n//                 <div className=\"logo\">\r\n//                     <h1 style={{ fontFamily: \"Courier New', Courier, monospace\", fontSize: '27px' }}>\r\n//                         SkillBridge\r\n//                     </h1>\r\n//                 </div>\r\n//                 <div className=\"nav-right\">\r\n//                     <ul className={`nav-links ${isNavActive ? 'active' : ''}`} id=\"navLinks\">\r\n//                     <li><Link to=\"/AHome\" state={{ data: data }}>Home</Link></li>\r\n//                     <li><Link to=\"/myworks\" state={{ data: data }}>My Works</Link></li>\r\n//                         <li><Link to=\"/Ashorts\" state={{ data: data }}>Shorts</Link></li>\r\n//                         <li><Link to=\"/Aservices\" state={{ data: data }}>Services</Link></li>\r\n//                         <li>\r\n//                             <Link to=\"/notifications\" state={{ data: data }} className=\"notification-link\">\r\n//                                 <FontAwesomeIcon icon={faBell} />\r\n//                             </Link>\r\n//                         </li>\r\n//                     </ul>\r\n//                     <div className=\"profile\">\r\n//                         <img\r\n//                             src=\"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png\"\r\n//                             alt=\"Profile\"\r\n//                             className=\"profile-img\"\r\n//                         />\r\n//                     </div>\r\n//                     <div className=\"hamburger\" id=\"hamburger\" onClick={toggleNav}>\r\n//                         <span className=\"bar\"></span>\r\n//                         <span className=\"bar\"></span>\r\n//                         <span className=\"bar\"></span>\r\n//                     </div>\r\n//                 </div>\r\n//             </nav>\r\n//             <div className=\"videos-container\">\r\n//                 {videoData.map((videoFileName, index) => (\r\n//                     <div key={index} className=\"video-card\">\r\n//                         <div className=\"single-video\">\r\n//                             <video\r\n//                                 key={index}\r\n//                                 controls\r\n//                                 src={`http://localhost:5000/uploads/${videoFileName}`}\r\n//                                 style={{ width: '400px', margin: '10px', height: 'auto' }}\r\n//                             >\r\n//                                 Your browser does not support the video tag.\r\n//                             </video>\r\n//                         </div>\r\n\r\n//                         <div className=\"interaction\">\r\n//                             <button>\r\n//                                 <FontAwesomeIcon icon={faUserCircle} />\r\n//                             </button>\r\n//                             <button\r\n//                                 onClick={() => handleReaction(index, 'liked')}\r\n//                                 disabled={reactions[index]?.liked}\r\n//                             >\r\n//                                 <FontAwesomeIcon icon={faThumbsUp} />\r\n//                                 <p className=\"ptag\">{reactions[index]?.liked ? 1 : 0}</p>\r\n//                             </button>\r\n//                             <button\r\n//                                 onClick={() => handleReaction(index, 'disliked')}\r\n//                                 disabled={reactions[index]?.disliked}\r\n//                             >\r\n//                                 <FontAwesomeIcon icon={faThumbsDown} />\r\n//                                 <p className=\"ptag\">{reactions[index]?.disliked ? 1 : 0}</p>\r\n//                             </button>\r\n//                             <button onClick={() => toggleComment(index)}>\r\n//                                 <FontAwesomeIcon icon={faComment} />\r\n//                             </button>\r\n//                         </div>\r\n\r\n//                         {descriptionVisible[index] && <p className=\"video-description\">Video description here</p>}\r\n\r\n//                         {commentVisible[index] && (\r\n//                             <div className=\"comment-section\">\r\n//                                 <div className=\"comment-input-container\">\r\n//                                     <textarea\r\n//                                         id={`comment-input-${index}`}\r\n//                                         placeholder=\"Write a comment...\"\r\n//                                         className=\"comment-input\"\r\n//                                     ></textarea>\r\n//                                     <button\r\n//                                         className=\"submit-comment\"\r\n//                                         onClick={() => handleCommentSubmit(index, videoFileName)}\r\n//                                     >\r\n//                                         <FontAwesomeIcon icon={faPaperPlane} />\r\n//                                     </button>\r\n//                                 </div>\r\n//                                 <div className=\"comments-list\">\r\n//                                     {comments[videoFileName]?.map((comment, idx) => (\r\n//                                         <p key={idx}>{comment}</p>\r\n//                                     ))}\r\n//                                 </div>\r\n//                             </div>\r\n//                         )}\r\n//                     </div>\r\n//                 ))}\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default AShorts;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}